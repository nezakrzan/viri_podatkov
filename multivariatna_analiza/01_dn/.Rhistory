N = c(rep(200,6)),
mean = c(215, 130, 130, 9, 11, 140),
Std.Dev. = c(0.4, 0.4, 0.4, 1, 0.8, 1),
Min = c(214, 129, 129, 7, 8, 138),
Pctl.25 = c(215, 130, 130, 8, 10, 140),
Pctl.50 = c(215, 130, 130, 9, 11, 140),
Pctl.75 = c(215, 130, 130, 11, 11, 142),
Max = c(216,131,131,13,12,142))
kable(stat,
caption="Opisne statistike za števillske spremenljivke v podatkovnem okviru Swiss banknotes data.") %>%
kable_styling(full_width=F, latex_options="hold_position")
library(reshape2)
library(ggplot2)
library(gridExtra)
g1 = ggplot(data, aes(x = tip, y= dolzina, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("dolzina(mm)")
g2 = ggplot(data, aes(x = tip, y= levi.rob, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("levi rob(mm)")
g3 = ggplot(data, aes(x = tip, y= desni.rob, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("desni rob(mm)")
g4 = ggplot(data, aes(x = tip, y= spodnji.rob, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("spodnji rob(mm)")
g5 = ggplot(data, aes(x = tip, y= zgornji.rob, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("zgornji rob(mm)")
g6 = ggplot(data, aes(x = tip, y= diagonala, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("diagonala(mm)")
library(patchwork)
library(ggpubr)
combined <- g1 + g2 + g3 + g4 + g5 + g6 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect", nrow = 3)
ime = c('dolzina','levi.rob','desni.rob', 'spodnji.rob', 'zgornji.rob')
Rlik <- cor(data[ime])
lowerMat(Rlik)
heatmap(x=Rlik, Rowv=NA, symm=T, revC=T,
col=hcl.colors(n=100, palette="Blue-Red 3", rev=T),
breaks=seq(-1, 1, 0.02))
heatmap(x=Rlik, symm=T, revC=T,
col=hcl.colors(n=100, palette="Blue-Red 3", rev=T),
breaks=seq(-1, 1, 0.02))
t(aggregate(x=data[ime], by=list(data$tip), FUN=mean))
agr <- aggregate(x=data[ime], by=list(data$tip), FUN=mean)
matplot(x=seq_along(ime), y=t(agr[, -1]), type="o", pch=16, col=agr[, 1], main="", xlab="", xaxt="n", ylab="")
axis(side=1, at=seq_along(ime), labels=ime, las=2)
#abline(v=1.5)
legend("topright", legend=agr[, 1], col=agr[, 1], pch=16)
tabela.diagonala <- round(cor(x=data[ime], y=data$diagonala, method="pearson"), 2)
kable(tabela.diagonala, caption="Korelacija med spremenljivko diagonala in ostalimi spremenljivkami:") %>%
kable_styling(full_width=F, latex_options="hold_position")
# sestavljene spremenljivke
#	sklop "istih" indikatorjev zdruzimo v eno sestavljeno spremenljivko (Likertova lestvica)
#	sklop tvorimo glede na teorijo
#	sklop se vidi iz korelacijske matrike
v1 <- c("dolzina")
v2 <- c('levi.rob','desni.rob', 'spodnji.rob', 'zgornji.rob')
# sestavljena spremenljivka je povprecje indikatorjev iz sklopa
# shranimo kot novi spremenljivki v podatkih (dodamo dva stolpca)
data$v1 <- rowMeans(x=data[v1])
data$v2 <- rowMeans(x=data[v2])
# Poglejmo porazdelitvi teh dveh spremenljivk.
OpisLikert <- as.data.frame(psych::describe(data[, c("v1","v2")]))
kable(round(OpisLikert[, c(2, 3, 4, 5, 8, 9, 10, 11, 12)], 2), caption="Deskriptivne statistike Likertovih spremenljivk.") %>%
kable_styling(full_width=F, latex_options="hold_position")
par(mfrow = c(1, 2))
hist(data$v1, main = "Porazdelitev spremenljivke dolzina", xlab = "dolzina", ylab = "frekvenca", prob = T)
x <- seq(min(data$v1), max(data$v1), length = 1000)
f <- dnorm(x, mean = mean(data$v1), sd = sd(data$v1))
lines(x, f, col = "red", lwd = 2)
hist(data$v2, main = "Porazdelitev spremenljivke mere", xlab = "mere", ylab = "frekvenca", prob = T)
# Preverimo domnevo o enakosti povprečij
t <- t.test(x = data$v2, y = data$v1, paired = TRUE)
tmp <- apply(data[, c("v1", "v2")], 2, jitter, amount = 0.07)
plot(tmp[,1], tmp[,2], xlab = "dolzina", ylab = "mere")
cor.test(x=data$v1, y=data$v2)
library(gplots)
par(mfrow = c(1,2))
plotmeans(v1 ~ tip,
data = data,
ylab = "povprečje",
xlab = "")
plotmeans(v2 ~ tip,
data = data,
ylab = "povprečje",
xlab = "")
t.test(data$v1 ~ data$tip)
t.test(data$v2 ~ data$tip)
# Izberemo spremenljivko
var <- "tip"
sprem <- c("v1", "v2")
# Izračunamo centroide po nadzoru
agg <- aggregate(data[, sprem], by=list(data[, var]), FUN=mean, na.rm = TRUE)
tmp <- apply(data[, sprem], 2, jitter, amount=0.07)
joint <- rbind(tmp, agg[, -1])
plot(joint,
xlab = "dolzina",
ylab = "mere",
pch = 16,
cex = c(rep(0.5, nrow(tmp)), rep(2, nrow(agg))),
col=c(data[, var], agg[,1]))
# dodamo legendo
par(xpd=TRUE)
legend("bottomright", legend = agg[,1], pch = 16, col = 1:nrow(agg))
# skaliranje podatkov
# vprasanje: misls da skalirava tud diagonalo k jo uporabva za analizo?, zdej ni skalirana
# odgovor: sva skalirala samo spremenljivke za razvrscanje
dfz <- scale(x=data[1:5])
# matrika razliznosti na standardiziranih podatkih (Evklidska razdalja)
dz <- dist(x=dfz, method="euclidean")
hc.ward <- hclust(d=dz, method="ward.D2")
oldpar <- par(las=1, mfrow=c(1, 3))
barplot(hc.ward$height)
barplot(tail(x=hc.ward$height, n=10), names.arg=rev(seq_len(10)))
plot(hc.ward, labels=F, hang=-1, main="Ward", sub="", xlab="", ylab="")
par(oldpar)
# uporabili smo Evklidsko razdaljo
hc.sin <- hclust(d=dz, method="single")
oldpar <- par(las=1, mfrow=c(1, 3))
barplot(hc.sin$height)
barplot(tail(x=hc.sin$height, n=10), names.arg=rev(seq_len(10)))
plot(hc.sin, labels=F, hang=-1, main="Single", sub="", xlab="", ylab="")
par(oldpar)
# uporabili smo Evklidsko razdaljo
hc.com <- hclust(d=dz, method="complete")
oldpar <- par(las=1, mfrow=c(1, 3))
barplot(hc.com$height)
barplot(tail(x=hc.com$height, n=10), names.arg=rev(seq_len(10)))
plot(hc.com, labels=F, hang=-1, main="Complete", sub="", xlab="", ylab="")
par(oldpar)
# Ward skupine
hc.ward1 <- cutree(tree=hc.ward, k=1)
hc.ward2 <- cutree(tree=hc.ward, k=2)
hc.ward3 <- cutree(tree=hc.ward, k=3)
hc.ward4 <- cutree(tree=hc.ward, k=4)
ime = c('dolzina','levi.rob','desni.rob', 'spodnji.rob', 'zgornji.rob')
oldpar <- par(las=1, mfrow=c(1, 3))
nsk <- 2
sk <- hc.ward2
sk.ime <- paste("sk", 1:nsk, sep="")
agr <- aggregate(x=dfz, by=list(sk), FUN=mean)
y <- t(agr[, -1])
matplot(x=seq_along(ime), y=y, type="o", pch=16, ylim=c(-2, 2), xlab="",
ylab="ovprecje (standardizirane spremenljivke)")
axis(side=1, at=seq_along(ime), labels=ime, las=2)
legend("bottomleft", legend=sk.ime, col=1:nsk, pch=16)
abline(h=0, v=6.5)
nsk <- 3
sk <- hc.ward3
sk.ime <- paste("sk", 1:nsk, sep="")
agr <- aggregate(x=dfz, by=list(sk), FUN=mean)
y <- t(agr[, -1])
matplot(x=seq_along(ime), y=y, type="o", pch=16, ylim=c(-2, 2), xlab="",
ylab="")
axis(side=1, at=seq_along(ime), labels=ime, las=2)
legend("bottomleft", legend=sk.ime, col=1:nsk, pch=16)
abline(h=0, v=6.5)
nsk <- 4
sk <- hc.ward4
sk.ime <- paste("sk", 1:nsk, sep="")
agr <- aggregate(x=dfz, by=list(sk), FUN=mean)
y <- t(agr[, -1])
matplot(x=seq_along(ime), y=y, type="o", pch=16, ylim=c(-2, 2), xlab="",
ylab="")
axis(side=1, at=seq_along(ime), labels=ime, las=2)
legend("bottomleft", legend=sk.ime, col=1:nsk, pch=16)
abline(h=0, v=6.5)
par(oldpar)
# WSS
kmax <- 10
wss <- NULL
for (k in 1:kmax) {
withinss <- kmeans(x=dfz, # podatki
centers=k, # st. skupin
nstart=100)$tot.withinss # st. ponovitev
wss <- c(wss, withinss)
}
plot(x=1:kmax, y=wss, type="b", main="", xlab="stevilo skupin(k)",
ylab="vrednost Wardowe kriterijske funkcije")
# gap statistika
gap_stat <- clusGap(x=dfz, FUNcluster=kmeans, K.max=kmax)
plot(gap_stat, xlab="stevilo skupin", main="")
# Pseudo F (Calinski and Harabasz index)
pseudoF <- 0
bss <- wss[1] - wss
for (k in 2:kmax) pseudoF <- c(pseudoF, (bss[k]/(k-1)) / (wss[k]/(nrow(dfz)-k)))
plot(x=1:kmax, y=pseudoF, type="b", xlab="stevilo skupin",
ylab="Pseudo F", main="")
km1 <- kmeans(x=dfz, centers=1, nstart=1)
km2 <- kmeans(x=dfz, centers=2, nstart=100)
km3 <- kmeans(x=dfz, centers=3, nstart=100)
km4 <- kmeans(x=dfz, centers=4, nstart=100)
# Wardova kriterijska funkcija
WardKF <- function(data, cluster){
# vsota kvadratov
# x = ena spremenljivka
ss <- function(x) sum((x-mean(x))^2)
# vsota kvadratov znotraj ene skupine po vseh spremenljivkah
# X = matrika, stolpci so spremenljivke
withinss <- function(X) sum(apply(X=X, MARGIN=2, FUN=ss))
# vsota kvadratov vseh skupin
sum(by(data=data, INDICES=cluster, FUN=withinss))
}
wkf <- NULL
wkf <- rbind(wkf, c(WardKF(dfz, hc.ward1), WardKF(dfz, hc.ward2), WardKF(dfz, hc.ward3), WardKF(dfz, hc.ward4)))
wkf <- rbind(wkf, c(WardKF(dfz, km1$cluster), WardKF(dfz, km2$cluster), WardKF(dfz, km3$cluster), WardKF(dfz, km4$cluster)))
rownames(wkf) <- c("Ward", "Kmeans")
colnames(wkf) <- c("k=1", "k=2", "k=3", "k=4")
kable(wkf, caption = "Primerjava vrednosti kriterijske funkcije za Wardowo metodo in K-means.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# kontingenčna tabela
#table(km4$cluster, c(3, 2, 4, 1)[hc.ward4])
kable(table(km4$cluster, c(3, 2, 4, 1)[hc.ward4]), caption = "Kontingenčna tabela.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# popravljen Randov indeks
adjustedRandIndex(x=km4$cluster, y=hc.ward4)
# kontingenčna tabela
#table(km4$cluster, c(3, 2, 4, 1)[hc.ward4])
kable(table(km4$cluster, c(1,2,3,4)[hc.ward4]), caption = "Kontingenčna tabela.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# popravljen Randov indeks
adjustedRandIndex(x=km4$cluster, y=hc.ward4)
# kontingenčna tabela
#table(km4$cluster, c(3, 2, 4, 1)[hc.ward4])
kable(table(km4$cluster, c(2,1,3,4)[hc.ward4]), caption = "Kontingenčna tabela.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# popravljen Randov indeks
adjustedRandIndex(x=km4$cluster, y=hc.ward4)
# kontingenčna tabela
#table(km4$cluster, c(3, 2, 4, 1)[hc.ward4])
kable(table(km3$cluster, c(2,1,3,4)[hc.ward3]), caption = "Kontingenčna tabela.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# popravljen Randov indeks
r = adjustedRandIndex(x=km3$cluster, y=hc.ward3)
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'H', fig.align="center", echo=FALSE, results = F)
library(cluster)
library(mclust)
library(foreign)
library(psych)
set.seed(2020)
data = read.table("data.txt", header = T, sep = "", dec = ".")
str(data)
nrow(data)
colnames(data)
knitr::include_graphics("ban.png")
# preimenovanje stolpcev
colnames(data) <- c('dolzina','levi.rob','desni.rob', 'spodnji.rob', 'zgornji.rob', 'diagonala', 'tip')
# nastavim stolpec kot faktor
data$tip <- as.factor(data$tip)
levels(data$tip)
# prevedem v slovenščino
levels(data$tip) <- c("ponarejen bankovec", "pravi bankovec")
levels(data$tip)
library(vtable)
#napovedne spremenljivke
pred <- c('dolzina','levi.rob','desni.rob', 'spodnji.rob', 'zgornji.rob', 'diagonala')
#sumtable(data[,pred], add.median = T, digits = 1,
#         title = "Opisne statistike za števillske spremenljivke v podatkovnem okviru Swiss banknotes data.", #simple.kable = T, out = 'kable', fit.page = "\textwidth")
stat = data.frame(spremenljivke = c("dolzina", "levi.rob", "desni.rob", "spodnji.rob", "zgornji.rob", "diagonala"),
N = c(rep(200,6)),
mean = c(215, 130, 130, 9, 11, 140),
Std.Dev. = c(0.4, 0.4, 0.4, 1, 0.8, 1),
Min = c(214, 129, 129, 7, 8, 138),
Pctl.25 = c(215, 130, 130, 8, 10, 140),
Pctl.50 = c(215, 130, 130, 9, 11, 140),
Pctl.75 = c(215, 130, 130, 11, 11, 142),
Max = c(216,131,131,13,12,142))
kable(stat,
caption="Opisne statistike za števillske spremenljivke v podatkovnem okviru Swiss banknotes data.") %>%
kable_styling(full_width=F, latex_options="hold_position")
library(reshape2)
library(ggplot2)
library(gridExtra)
g1 = ggplot(data, aes(x = tip, y= dolzina, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("dolzina(mm)")
g2 = ggplot(data, aes(x = tip, y= levi.rob, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("levi rob(mm)")
g3 = ggplot(data, aes(x = tip, y= desni.rob, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("desni rob(mm)")
g4 = ggplot(data, aes(x = tip, y= spodnji.rob, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("spodnji rob(mm)")
g5 = ggplot(data, aes(x = tip, y= zgornji.rob, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("zgornji rob(mm)")
g6 = ggplot(data, aes(x = tip, y= diagonala, fill=tip)) +
geom_boxplot() +
theme_bw() +
ylab("diagonala(mm)")
library(patchwork)
library(ggpubr)
combined <- g1 + g2 + g3 + g4 + g5 + g6 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect", nrow = 3)
ime = c('dolzina','levi.rob','desni.rob', 'spodnji.rob', 'zgornji.rob')
Rlik <- cor(data[ime])
lowerMat(Rlik)
heatmap(x=Rlik, Rowv=NA, symm=T, revC=T,
col=hcl.colors(n=100, palette="Blue-Red 3", rev=T),
breaks=seq(-1, 1, 0.02))
heatmap(x=Rlik, symm=T, revC=T,
col=hcl.colors(n=100, palette="Blue-Red 3", rev=T),
breaks=seq(-1, 1, 0.02))
t(aggregate(x=data[ime], by=list(data$tip), FUN=mean))
agr <- aggregate(x=data[ime], by=list(data$tip), FUN=mean)
matplot(x=seq_along(ime), y=t(agr[, -1]), type="o", pch=16, col=agr[, 1], main="", xlab="", xaxt="n", ylab="")
axis(side=1, at=seq_along(ime), labels=ime, las=2)
#abline(v=1.5)
legend("topright", legend=agr[, 1], col=agr[, 1], pch=16)
tabela.diagonala <- round(cor(x=data[ime], y=data$diagonala, method="pearson"), 2)
kable(tabela.diagonala, caption="Korelacija med spremenljivko diagonala in ostalimi spremenljivkami:") %>%
kable_styling(full_width=F, latex_options="hold_position")
# sestavljene spremenljivke
#	sklop "istih" indikatorjev zdruzimo v eno sestavljeno spremenljivko (Likertova lestvica)
#	sklop tvorimo glede na teorijo
#	sklop se vidi iz korelacijske matrike
v1 <- c("dolzina")
v2 <- c('levi.rob','desni.rob', 'spodnji.rob', 'zgornji.rob')
# sestavljena spremenljivka je povprecje indikatorjev iz sklopa
# shranimo kot novi spremenljivki v podatkih (dodamo dva stolpca)
data$v1 <- rowMeans(x=data[v1])
data$v2 <- rowMeans(x=data[v2])
# Poglejmo porazdelitvi teh dveh spremenljivk.
OpisLikert <- as.data.frame(psych::describe(data[, c("v1","v2")]))
kable(round(OpisLikert[, c(2, 3, 4, 5, 8, 9, 10, 11, 12)], 2), caption="Deskriptivne statistike Likertovih spremenljivk.") %>%
kable_styling(full_width=F, latex_options="hold_position")
par(mfrow = c(1, 2))
hist(data$v1, main = "Porazdelitev spremenljivke dolzina", xlab = "dolzina", ylab = "frekvenca", prob = T)
x <- seq(min(data$v1), max(data$v1), length = 1000)
f <- dnorm(x, mean = mean(data$v1), sd = sd(data$v1))
lines(x, f, col = "red", lwd = 2)
hist(data$v2, main = "Porazdelitev spremenljivke mere", xlab = "mere", ylab = "frekvenca", prob = T)
# Preverimo domnevo o enakosti povprečij
t <- t.test(x = data$v2, y = data$v1, paired = TRUE)
tmp <- apply(data[, c("v1", "v2")], 2, jitter, amount = 0.07)
plot(tmp[,1], tmp[,2], xlab = "dolzina", ylab = "mere")
cor.test(x=data$v1, y=data$v2)
library(gplots)
par(mfrow = c(1,2))
plotmeans(v1 ~ tip,
data = data,
ylab = "povprečje",
xlab = "")
plotmeans(v2 ~ tip,
data = data,
ylab = "povprečje",
xlab = "")
t.test(data$v1 ~ data$tip)
t.test(data$v2 ~ data$tip)
# Izberemo spremenljivko
var <- "tip"
sprem <- c("v1", "v2")
# Izračunamo centroide po nadzoru
agg <- aggregate(data[, sprem], by=list(data[, var]), FUN=mean, na.rm = TRUE)
tmp <- apply(data[, sprem], 2, jitter, amount=0.07)
joint <- rbind(tmp, agg[, -1])
plot(joint,
xlab = "dolzina",
ylab = "mere",
pch = 16,
cex = c(rep(0.5, nrow(tmp)), rep(2, nrow(agg))),
col=c(data[, var], agg[,1]))
# dodamo legendo
par(xpd=TRUE)
legend("bottomright", legend = agg[,1], pch = 16, col = 1:nrow(agg))
# skaliranje podatkov
# vprasanje: misls da skalirava tud diagonalo k jo uporabva za analizo?, zdej ni skalirana
# odgovor: sva skalirala samo spremenljivke za razvrscanje
dfz <- scale(x=data[1:5])
# matrika razliznosti na standardiziranih podatkih (Evklidska razdalja)
dz <- dist(x=dfz, method="euclidean")
hc.ward <- hclust(d=dz, method="ward.D2")
oldpar <- par(las=1, mfrow=c(1, 3))
barplot(hc.ward$height)
barplot(tail(x=hc.ward$height, n=10), names.arg=rev(seq_len(10)))
plot(hc.ward, labels=F, hang=-1, main="Ward", sub="", xlab="", ylab="")
par(oldpar)
# uporabili smo Evklidsko razdaljo
hc.sin <- hclust(d=dz, method="single")
oldpar <- par(las=1, mfrow=c(1, 3))
barplot(hc.sin$height)
barplot(tail(x=hc.sin$height, n=10), names.arg=rev(seq_len(10)))
plot(hc.sin, labels=F, hang=-1, main="Single", sub="", xlab="", ylab="")
par(oldpar)
# uporabili smo Evklidsko razdaljo
hc.com <- hclust(d=dz, method="complete")
oldpar <- par(las=1, mfrow=c(1, 3))
barplot(hc.com$height)
barplot(tail(x=hc.com$height, n=10), names.arg=rev(seq_len(10)))
plot(hc.com, labels=F, hang=-1, main="Complete", sub="", xlab="", ylab="")
par(oldpar)
# Ward skupine
hc.ward1 <- cutree(tree=hc.ward, k=1)
hc.ward2 <- cutree(tree=hc.ward, k=2)
hc.ward3 <- cutree(tree=hc.ward, k=3)
hc.ward4 <- cutree(tree=hc.ward, k=4)
ime = c('dolzina','levi.rob','desni.rob', 'spodnji.rob', 'zgornji.rob')
oldpar <- par(las=1, mfrow=c(1, 3))
nsk <- 2
sk <- hc.ward2
sk.ime <- paste("sk", 1:nsk, sep="")
agr <- aggregate(x=dfz, by=list(sk), FUN=mean)
y <- t(agr[, -1])
matplot(x=seq_along(ime), y=y, type="o", pch=16, ylim=c(-2, 2), xlab="",
ylab="ovprecje (standardizirane spremenljivke)")
axis(side=1, at=seq_along(ime), labels=ime, las=2)
legend("bottomleft", legend=sk.ime, col=1:nsk, pch=16)
abline(h=0, v=6.5)
nsk <- 3
sk <- hc.ward3
sk.ime <- paste("sk", 1:nsk, sep="")
agr <- aggregate(x=dfz, by=list(sk), FUN=mean)
y <- t(agr[, -1])
matplot(x=seq_along(ime), y=y, type="o", pch=16, ylim=c(-2, 2), xlab="",
ylab="")
axis(side=1, at=seq_along(ime), labels=ime, las=2)
legend("bottomleft", legend=sk.ime, col=1:nsk, pch=16)
abline(h=0, v=6.5)
nsk <- 4
sk <- hc.ward4
sk.ime <- paste("sk", 1:nsk, sep="")
agr <- aggregate(x=dfz, by=list(sk), FUN=mean)
y <- t(agr[, -1])
matplot(x=seq_along(ime), y=y, type="o", pch=16, ylim=c(-2, 2), xlab="",
ylab="")
axis(side=1, at=seq_along(ime), labels=ime, las=2)
legend("bottomleft", legend=sk.ime, col=1:nsk, pch=16)
abline(h=0, v=6.5)
par(oldpar)
# WSS
kmax <- 10
wss <- NULL
for (k in 1:kmax) {
withinss <- kmeans(x=dfz, # podatki
centers=k, # st. skupin
nstart=100)$tot.withinss # st. ponovitev
wss <- c(wss, withinss)
}
plot(x=1:kmax, y=wss, type="b", main="", xlab="stevilo skupin(k)",
ylab="vrednost Wardowe kriterijske funkcije")
# gap statistika
gap_stat <- clusGap(x=dfz, FUNcluster=kmeans, K.max=kmax)
plot(gap_stat, xlab="stevilo skupin", main="")
# Pseudo F (Calinski and Harabasz index)
pseudoF <- 0
bss <- wss[1] - wss
for (k in 2:kmax) pseudoF <- c(pseudoF, (bss[k]/(k-1)) / (wss[k]/(nrow(dfz)-k)))
plot(x=1:kmax, y=pseudoF, type="b", xlab="stevilo skupin",
ylab="Pseudo F", main="")
km1 <- kmeans(x=dfz, centers=1, nstart=1)
km2 <- kmeans(x=dfz, centers=2, nstart=100)
km3 <- kmeans(x=dfz, centers=3, nstart=100)
km4 <- kmeans(x=dfz, centers=4, nstart=100)
# Wardova kriterijska funkcija
WardKF <- function(data, cluster){
# vsota kvadratov
# x = ena spremenljivka
ss <- function(x) sum((x-mean(x))^2)
# vsota kvadratov znotraj ene skupine po vseh spremenljivkah
# X = matrika, stolpci so spremenljivke
withinss <- function(X) sum(apply(X=X, MARGIN=2, FUN=ss))
# vsota kvadratov vseh skupin
sum(by(data=data, INDICES=cluster, FUN=withinss))
}
wkf <- NULL
wkf <- rbind(wkf, c(WardKF(dfz, hc.ward1), WardKF(dfz, hc.ward2), WardKF(dfz, hc.ward3), WardKF(dfz, hc.ward4)))
wkf <- rbind(wkf, c(WardKF(dfz, km1$cluster), WardKF(dfz, km2$cluster), WardKF(dfz, km3$cluster), WardKF(dfz, km4$cluster)))
rownames(wkf) <- c("Ward", "Kmeans")
colnames(wkf) <- c("k=1", "k=2", "k=3", "k=4")
kable(wkf, caption = "Primerjava vrednosti kriterijske funkcije za Wardowo metodo in K-means.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# kontingenčna tabela
#table(km4$cluster, c(3, 2, 4, 1)[hc.ward4])
kable(table(km3$cluster, c(1,2,3)[hc.ward3]), caption = "Kontingenčna tabela.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# popravljen Randov indeks
r = adjustedRandIndex(x=km3$cluster, y=hc.ward3)
# kontingenčna tabela
#table(km4$cluster, c(3, 2, 4, 1)[hc.ward4])
kable(table(km3$cluster, c(1,3,2)[hc.ward3]), caption = "Kontingenčna tabela.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# popravljen Randov indeks
r = adjustedRandIndex(x=km3$cluster, y=hc.ward3)
r
par(mfrow = c(1, 2))
hist(data$v1, main = "Porazdelitev spremenljivke dolzina", xlab = "dolzina", ylab = "frekvenca", prob = T)
x <- seq(min(data$v1), max(data$v1), length = 1000)
f <- dnorm(x, mean = mean(data$v1), sd = sd(data$v1))
lines(x, f, col = "red", lwd = 2)
hist(data$v2, main = "Porazdelitev spremenljivke mere", xlab = "mere", ylab = "frekvenca", prob = T)
# Preverimo domnevo o enakosti povprečij
t <- t.test(x = data$v2, y = data$v1, paired = TRUE)
t
mean(dolzina)
mean(data$dolzina)
mean(data$v2)
