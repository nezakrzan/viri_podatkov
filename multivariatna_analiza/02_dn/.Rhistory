setwd("~/Documents/GitHub/viri_podatkov/multivariatna_analiza/02_dn")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
fig.pos = "H",
message = FALSE,
warning = FALSE,
results = F, fig.height = 4, fig.width = 5
)
library(haven)
library(psych)
library(ggplot2)
library(reshape2)
library(dplyr)
library(kableExtra)
library(blockmodeling)
set.seed(2024)
# vsi podatki
dataframe <- read_sav("dn3_big5.sav")
# samo najni stolpci
stolpci = c("EXT1","EXT2","EXT3","EXT4","EXT5","EXT6","EXT7","EXT8","EXT9","EXT10",
"EST1","EST2","EST3","EST4","EST5","EST6","EST7","EST8","EST9","EST10")
# najni podatki
podatki = dataframe[dataframe$country == "FR", stolpci]
n_prej = nrow(podatki) # stevilo vrstic pred odstranitvijo NA
podatki = na.omit(podatki) # odstranjene vrstice, ki vsebujejo NA
razlika = n_prej - nrow(podatki) # stevilo odtrajenih vrstic
negativne = c("EXT2", "EXT4", "EXT6", "EXT8", "EXT10",
"EST1", "EST3", "EST5", "EST6", "EST7", "EST8", "EST9", "EST10")
# negativne = c("EXT2", "EXT4", "EXT6", "EXT8", "EXT10",
#               "EST2", "EST4")
for(el in negativne){
podatki[[el]] = -1*podatki[[el]]
}
stat = data.frame(spremenljivke = c("EXT1", "EXT2", "EXT3", "EXT4", "EXT5", "EXT6", "EXT7", "EXT8", "EXT9", "EXT10", "EST1", "EST2", "EST3", "EST4", "EST5", "EST6", "EST7", "EST8", "EST9", "EST10"),
mean = c(2.48,-2.972,3.055,-3.242,3.118,-2.469, 2.679 ,-3.414 ,2.944,-3.688 ,-3.325
,3.061,-3.862,2.804,-3.182,-2.913,-3.107,-2.884,-3.015,-3.122),
Min = c(1.000,-5.000,1.000,-5.000,1.000,-5.000,1.000,-5.000,1.000,-5.000,-5.000,1.000,
-5.000,1.000,-5.000,-5.000,-5.000,-5.000, -5.000, -5.000),
Max = c(5.000,-1.000,5.000,-1.000,5.000,-1.000 ,5.000,-1.000,5.000,-1.000,-1.000,5.000,
-1.000,5.000,-1.000,-1.000,-1.000,-1.000,-1.000,-1.000))
kable(stat,
caption="Opisne statistike za števillske spremenljivke v podatkovnem okviru.") %>%
kable_styling(full_width=F, latex_options="hold_position")
# Korelacijska matrika stvilsko
Rlik <- cor(podatki)
# lowerMat(R=Rlik)
# kable(Rlik,
#       caption="Korelacijska matrika.") %>%
#   kable_styling(full_width=F, latex_options="hold_position")
# morda bolje, ker tale matrika ne pride okej v pdf?
library(corrplot)
colors10 <- colorRampPalette(c("#0000aa","white","#aa0000"))(10)
corrplot.mixed(cor(podatki,
method = "pearson"),
lower.col = colors10, upper.col = colors10,
tl.col="black", tl.cex = 0.5, number.cex = 0.5)
int <- c(-1, -0.5, -0.3, -0.1, 0.1, 0.3, 0.5, 1)
nint <- length(int) - 1
legint <- c("neg", "srednje", "sibko", "zanemarljivo", "sibko", "srednje", "poz")
heatmap(x=Rlik, Rowv=NA, symm=T, revC=T, margins=c(8, 8),
col=hcl.colors(n=nint, palette="Blue-Red 3", rev=T), breaks=int)
legend(x="topleft", legend=legint,
fill=hcl.colors(n=nint, palette="Blue-Red 3", rev=T), inset=c(0.75, 0), xpd=T)
cortest = cortest.bartlett(R=Rlik, n=nrow(podatki))
# KMO(Rlik)
round(KMO(Rlik)$MSAi,2)
mgk <- princomp(x=podatki, cor=T, scores=T)
plot(mgk, type="lines", ylim=c(0, 6), main="MGK")
# lastne vrednosti
eig <- eigen(x=Rlik, symmetric=T, only.values=T)$values
# round(cbind(eig, mgk$sdev^2, mgk$sdev),4)
# sum(eig)
kable(round(cbind(eig, mgk$sdev^2, mgk$sdev),4), caption="Izbira glavnih komponent na podlagi lastnih vrednosti.",
col.names = c("št. komponent", "lastna vrednost", "varianca", "standardni odklon")) %>%
kable_styling(full_width=F, latex_options="hold_position")
# paralelna analiza
fa.parallel(x=Rlik, n.obs=nrow(podatki), fm="minres", fa="pc")
loadings.orig <- mgk$loadings[,1:2]
loadings.res <- loadings.orig %*% diag(sqrt(eig[1:2]))
utezi = data.frame(comp1n = loadings.orig[,1], comp2n = loadings.orig[,2],
comp1r = loadings.res[,1], comp2r = loadings.res[,2])
kable(utezi, caption="Prikaz uteži glavnih komponen.",
col.names = c("Comp.1", "Comp.2", "Comp.1", "Comp.2")) %>%
add_header_above(header = c(" " = 1, "Nereskalirane uteži" = 2, "Reskalirane uteži" = 2)) %>%
kable_styling(full_width=F, latex_options="hold_position")
# delez pojasnjene variabilnosti GK
# celotna variabilnost (koliko prispeva vsaka komponenta)
skupna_var = eig/sum(eig)
prvi_dve = round(sum(skupna_var[1:2]),3)
za_vse = round(rowSums(loadings.res**2) ,2)
matplot(x=seq_along(stolpci), y=loadings.res, type="o", pch=16,
xlab="", ylab="Korelacije", ylim=c(-1, 1), las=1,
xaxt = "n")
legend("bottomleft", legend=c("GK1", "GK2"), col=1:2, pch=16)
abline(h=0, v=10.5)
axis(side = 1, at = 1:20, labels = stolpci, rotation='vertical', las=2)
