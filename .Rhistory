"2003" = l.2003 ,
"2004" = l.2004,
"2005" = l.2005,
"2006" = l.2006,
"2007" = l.2007,
"2008" = l.2009,
"2009" = l.2010,
"2010" = l.2011,
"2011" = l.2011,
"2012" = l.2012,
"2013" = l.2013,
"2014" = l.2014,
"2015" = l.2015,
"2016" = l.2016,
"2017" = l.2017,
"2018" = l.2018,
"2019" = l.2019,
"2020" = l.2020,
"2021" = l.2021,
"2022" = l.2022)
})
# Table of selected dataset ----
output$table <- renderTable({
datasetInput()
})
}
# Create Shiny app ----
shinyApp(ui, server)
View(l.2002)
l.2002 = podatki[podatki$LETO == "2002" & podatki$SPOL == "Zenske" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,4)]
View(l.2002)
library(shiny)
# Define UI for data download app ----
ui <- fluidPage(
# App title ----
titlePanel(""),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Choose dataset ----
selectInput("dataset", "",
choices = c("2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010",
"2011","2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020",
"2021", "2022"))
),
# Main panel for displaying outputs ----
mainPanel(
tableOutput("table")
)
)
)
# Define server logic to display and download selected file ----
server <- function(input, output) {
# Reactive value for selected dataset ----
datasetInput <- reactive({
switch(input$dataset,
"2002" = l.2002,
"2003" = l.2003 ,
"2004" = l.2004,
"2005" = l.2005,
"2006" = l.2006,
"2007" = l.2007,
"2008" = l.2009,
"2009" = l.2010,
"2010" = l.2011,
"2011" = l.2011,
"2012" = l.2012,
"2013" = l.2013,
"2014" = l.2014,
"2015" = l.2015,
"2016" = l.2016,
"2017" = l.2017,
"2018" = l.2018,
"2019" = l.2019,
"2020" = l.2020,
"2021" = l.2021,
"2022" = l.2022)
})
# Table of selected dataset ----
output$table <- renderTable({
datasetInput()
})
}
# Create Shiny app ----
shinyApp(ui, server)
l.2002 = podatki[podatki$LETO == "2002" & podatki$SPOL == "Zenske" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2003 = podatki[podatki$LETO == "2003" & podatki$SPOL == "Zenske",]
l.2004 = podatki[podatki$LETO == "2004" & podatki$SPOL == "Zenske",]
l.2005 = podatki[podatki$LETO == "2005" & podatki$SPOL == "Zenske",]
l.2006 = podatki[podatki$LETO == "2006" & podatki$SPOL == "Zenske",]
l.2007 = podatki[podatki$LETO == "2007" & podatki$SPOL == "Zenske",]
l.2008 = podatki[podatki$LETO == "2008" & podatki$SPOL == "Zenske",]
l.2009 = podatki[podatki$LETO == "2009" & podatki$SPOL == "Zenske",]
l.2010 = podatki[podatki$LETO == "2010" & podatki$SPOL == "Zenske",]
l.2011 = podatki[podatki$LETO == "2011" & podatki$SPOL == "Zenske",]
l.2012 = podatki[podatki$LETO == "2012" & podatki$SPOL == "Zenske",]
l.2013 = podatki[podatki$LETO == "2013" & podatki$SPOL == "Zenske",]
l.2014 = podatki[podatki$LETO == "2014" & podatki$SPOL == "Zenske",]
l.2015 = podatki[podatki$LETO == "2015" & podatki$SPOL == "Zenske",]
l.2016 = podatki[podatki$LETO == "2016" & podatki$SPOL == "Zenske",]
l.2017 = podatki[podatki$LETO == "2017" & podatki$SPOL == "Zenske",]
l.2018 = podatki[podatki$LETO == "2018" & podatki$SPOL == "Zenske",]
l.2019 = podatki[podatki$LETO == "2019" & podatki$SPOL == "Zenske",]
l.2020 = podatki[podatki$LETO == "2020" & podatki$SPOL == "Zenske",]
l.2021 = podatki[podatki$LETO == "2021" & podatki$SPOL == "Zenske",]
l.2022 = podatki[podatki$LETO == "2022" & podatki$SPOL == "Zenske",]
l.2002 = podatki[podatki$LETO == "2002" & podatki$SPOL == "Zenske" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2003 = podatki[podatki$LETO == "2003" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2004 = podatki[podatki$LETO == "2004" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2005 = podatki[podatki$LETO == "2005" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2006 = podatki[podatki$LETO == "2006" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2007 = podatki[podatki$LETO == "2007" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2008 = podatki[podatki$LETO == "2008" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2009 = podatki[podatki$LETO == "2009" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2010 = podatki[podatki$LETO == "2010" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2011 = podatki[podatki$LETO == "2011" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2012 = podatki[podatki$LETO == "2012" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2013 = podatki[podatki$LETO == "2013" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2014 = podatki[podatki$LETO == "2014" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2015 = podatki[podatki$LETO == "2015" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2016 = podatki[podatki$LETO == "2016" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2017 = podatki[podatki$LETO == "2017" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2018 = podatki[podatki$LETO == "2018" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2019 = podatki[podatki$LETO == "2019" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2020 = podatki[podatki$LETO == "2020" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2021 = podatki[podatki$LETO == "2021" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2022 = podatki[podatki$LETO == "2022" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
library(shiny)
# Define UI for data download app ----
ui <- fluidPage(
# App title ----
titlePanel(""),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Choose dataset ----
selectInput("dataset", "",
choices = c("2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010",
"2011","2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020",
"2021", "2022"))
),
# Main panel for displaying outputs ----
mainPanel(
tableOutput("table")
)
)
)
# Define server logic to display and download selected file ----
server <- function(input, output) {
# Reactive value for selected dataset ----
datasetInput <- reactive({
switch(input$dataset,
"2002" = l.2002,
"2003" = l.2003 ,
"2004" = l.2004,
"2005" = l.2005,
"2006" = l.2006,
"2007" = l.2007,
"2008" = l.2009,
"2009" = l.2010,
"2010" = l.2011,
"2011" = l.2011,
"2012" = l.2012,
"2013" = l.2013,
"2014" = l.2014,
"2015" = l.2015,
"2016" = l.2016,
"2017" = l.2017,
"2018" = l.2018,
"2019" = l.2019,
"2020" = l.2020,
"2021" = l.2021,
"2022" = l.2022)
})
# Table of selected dataset ----
output$table <- renderTable({
datasetInput()
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for data download app ----
ui <- fluidPage(
# App title ----
titlePanel(""),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Choose dataset ----
selectInput("dataset", "",
choices = c("2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010",
"2011","2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020",
"2021", "2022"))
),
selectInput("dataset", "Spol",
choices = c("moski", "zenski"))
),
# Main panel for displaying outputs ----
mainPanel(
tableOutput("table")
)
)
)
library(shiny)
# Define UI for data download app ----
ui <- fluidPage(
# App title ----
titlePanel(""),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Choose dataset ----
selectInput("dataset", "",
choices = c("2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010",
"2011","2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020",
"2021", "2022"))
selectInput("dataset", "Spol",
library(shiny)
# Define UI for data download app ----
ui <- fluidPage(
# App title ----
titlePanel(""),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Choose dataset ----
selectInput("dataset", "",
choices = c("2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010",
"2011","2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020",
"2021", "2022")),
selectInput("dataset", "Spol",
choices = c("moski", "zenski"))
),
# Main panel for displaying outputs ----
mainPanel(
tableOutput("table")
)
)
)
# Define server logic to display and download selected file ----
server <- function(input, output) {
# Reactive value for selected dataset ----
datasetInput <- reactive({
switch(input$dataset,
"2002" = l.2002,
"2003" = l.2003 ,
"2004" = l.2004,
"2005" = l.2005,
"2006" = l.2006,
"2007" = l.2007,
"2008" = l.2009,
"2009" = l.2010,
"2010" = l.2011,
"2011" = l.2011,
"2012" = l.2012,
"2013" = l.2013,
"2014" = l.2014,
"2015" = l.2015,
"2016" = l.2016,
"2017" = l.2017,
"2018" = l.2018,
"2019" = l.2019,
"2020" = l.2020,
"2021" = l.2021,
"2022" = l.2022)
})
# Table of selected dataset ----
output$table <- renderTable({
datasetInput()
})
}
# Create Shiny app ----
shinyApp(ui, server)
l.2002 = podatki[podatki$LETO == "2002" & podatki$SPOL == "Zenske" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ" & podatki$KOHEZIJSKA.REGIJA == "SLOVENIJA", c(1,2,5)]
l.2002 = podatki[podatki$LETO == "2002" & podatki$SPOL == "Zenske" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2003 = podatki[podatki$LETO == "2003" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2004 = podatki[podatki$LETO == "2004" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2005 = podatki[podatki$LETO == "2005" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2006 = podatki[podatki$LETO == "2006" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2007 = podatki[podatki$LETO == "2007" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2008 = podatki[podatki$LETO == "2008" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2009 = podatki[podatki$LETO == "2009" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2010 = podatki[podatki$LETO == "2010" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2011 = podatki[podatki$LETO == "2011" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2012 = podatki[podatki$LETO == "2012" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2013 = podatki[podatki$LETO == "2013" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2014 = podatki[podatki$LETO == "2014" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2015 = podatki[podatki$LETO == "2015" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2016 = podatki[podatki$LETO == "2016" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2017 = podatki[podatki$LETO == "2017" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2018 = podatki[podatki$LETO == "2018" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2019 = podatki[podatki$LETO == "2019" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2020 = podatki[podatki$LETO == "2020" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2021 = podatki[podatki$LETO == "2021" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
l.2022 = podatki[podatki$LETO == "2022" & podatki$SPOL == "Zenske"& podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ", c(1,2,5)]
library(shiny)
# Define UI for data download app ----
ui <- fluidPage(
# App title ----
titlePanel(""),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Choose dataset ----
selectInput("dataset", "",
choices = c("2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010",
"2011","2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020",
"2021", "2022")),
selectInput("dataset", "Spol",
choices = c("moski", "zenski"))
),
# Main panel for displaying outputs ----
mainPanel(
tableOutput("table")
)
)
)
# Define server logic to display and download selected file ----
server <- function(input, output) {
# Reactive value for selected dataset ----
datasetInput <- reactive({
switch(input$dataset,
"2002" = l.2002,
"2003" = l.2003 ,
"2004" = l.2004,
"2005" = l.2005,
"2006" = l.2006,
"2007" = l.2007,
"2008" = l.2009,
"2009" = l.2010,
"2010" = l.2011,
"2011" = l.2011,
"2012" = l.2012,
"2013" = l.2013,
"2014" = l.2014,
"2015" = l.2015,
"2016" = l.2016,
"2017" = l.2017,
"2018" = l.2018,
"2019" = l.2019,
"2020" = l.2020,
"2021" = l.2021,
"2022" = l.2022)
})
# Table of selected dataset ----
output$table <- renderTable({
datasetInput()
})
}
# Create Shiny app ----
shinyApp(ui, server)
#podatki = read.csv("podatki.csv", sep=';')
podatki = read.csv("podatki.csv", sep=';', na.strings = "...")
setwd("~/Documents/GitHub/viri_podatkov")
#podatki = read.csv("podatki.csv", sep=';')
podatki = read.csv("podatki.csv", sep=';', na.strings = "...")
# ime stolpca Vzork.smrti --> stevilo
colnames(podatki)[5] = "stevilo"
# ime stolpca Vzrok.smrti.na.1000.prebivalcev --> stevilo1000
colnames(podatki)[6] = "stevilo1000"
df1 <- podatki[podatki$KOHEZIJSKA.REGIJA =="SLOVENIJA" & podatki$SPOL =="Moski" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ",]
df2 <- podatki[podatki$KOHEZIJSKA.REGIJA =="SLOVENIJA" & podatki$SPOL =="Zenske" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ",]
df = na.omit(data.frame(moski.s = df1$stevilo, zenske.s = df2$stevilo, leto = df1$LETO, vzrok = df1$VZROK.SMRTI))
df[df$vzrok =="Poskodbe, zastrupitve in nekatere druge posledice zunanjih vzrokov (S00-T98)", "vzrok"] = "Poskodbe, zastrupitve, zunanji vzroki (S00-T98)"
ggplot(df, aes(x = leto)) +
geom_line(aes(y = zenske.s, color = "zenske"), size=1.1) +
geom_line(aes(y = moski.s, color = "moski"), size=1.1) +
scale_color_manual(values = c('zenske' = 'pink', 'moski' = 'lightblue')) +
scale_x_continuous(breaks=seq(2002, 2022, 3)) +
scale_y_continuous(breaks=seq(500, 5000, 600)) +
labs(color = 'SPOL') +
#theme_ipsum(grid="Y", strip_text_size = 16, axis_text_size = 12, axis_title_size = 12) +
xlab("leto") + ylab("stevilo umrlih") +
facet_wrap(~vzrok) +
theme(plot.title = element_text(color = "black", size = 20, face = "bold"),
plot.subtitle = element_markdown(color = "grey", size = 16),
legend.position="bottom",
legend.text=element_text(size=16),
legend.title=element_text(size=16))
knitr::opts_chunk$set(echo = TRUE)
# devtools::install_github("teunbrand/ggh4x")
library(shiny)
library(plotly)
library(dplyr)
library(tidyverse)
library(highcharter)
library(tidyr)
library(geofacet)
library(ggh4x)
library(streamgraph)
library(hrbrthemes)
library(ggtext)
df1 <- podatki[podatki$KOHEZIJSKA.REGIJA =="SLOVENIJA" & podatki$SPOL =="Moski" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ",]
df2 <- podatki[podatki$KOHEZIJSKA.REGIJA =="SLOVENIJA" & podatki$SPOL =="Zenske" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ",]
df = na.omit(data.frame(moski.s = df1$stevilo, zenske.s = df2$stevilo, leto = df1$LETO, vzrok = df1$VZROK.SMRTI))
df[df$vzrok =="Poskodbe, zastrupitve in nekatere druge posledice zunanjih vzrokov (S00-T98)", "vzrok"] = "Poskodbe, zastrupitve, zunanji vzroki (S00-T98)"
ggplot(df, aes(x = leto)) +
geom_line(aes(y = zenske.s, color = "zenske"), size=1.1) +
geom_line(aes(y = moski.s, color = "moski"), size=1.1) +
scale_color_manual(values = c('zenske' = 'pink', 'moski' = 'lightblue')) +
scale_x_continuous(breaks=seq(2002, 2022, 3)) +
scale_y_continuous(breaks=seq(500, 5000, 600)) +
labs(color = 'SPOL') +
#theme_ipsum(grid="Y", strip_text_size = 16, axis_text_size = 12, axis_title_size = 12) +
xlab("leto") + ylab("stevilo umrlih") +
facet_wrap(~vzrok) +
theme(plot.title = element_text(color = "black", size = 20, face = "bold"),
plot.subtitle = element_markdown(color = "grey", size = 16),
legend.position="bottom",
legend.text=element_text(size=16),
legend.title=element_text(size=16))
ggplot(df, aes(x = leto)) +
geom_line(aes(y = zenske.s, color = "zenske"), size=1.1) +
geom_line(aes(y = moski.s, color = "moski"), size=1.1) +
scale_color_manual(values = c('zenske' = 'pink', 'moski' = 'lightblue')) +
scale_x_continuous(breaks=seq(2002, 2022, 3)) +
scale_y_continuous(breaks=seq(500, 5000, 600)) +
labs(color = 'SPOL') +
theme_ipsum(grid="Y", strip_text_size = 16, axis_text_size = 12, axis_title_size = 12) +
xlab("leto") + ylab("stevilo umrlih") +
facet_wrap(~vzrok) +
theme(plot.title = element_text(color = "black", size = 20, face = "bold"),
plot.subtitle = element_markdown(color = "grey", size = 16),
legend.position="bottom",
legend.text=element_text(size=16),
legend.title=element_text(size=16))
ggplot(df, aes(x = leto)) +
geom_line(aes(y = zenske.s, color = "zenske"), size=1.1) +
geom_line(aes(y = moski.s, color = "moski"), size=1.1) +
scale_color_manual(values = c('zenske' = 'pink', 'moski' = 'lightblue')) +
scale_x_continuous(breaks=seq(2002, 2022, 3)) +
scale_y_continuous(breaks=seq(500, 5000, 600)) +
labs(color = 'SPOL') +
theme_ipsum(grid="Y", strip_text_size = 15, axis_text_size = 12, axis_title_size = 12) +
xlab("leto") + ylab("stevilo umrlih") +
facet_wrap(~vzrok, scales='free') +
theme(plot.title = element_text(color = "black", size = 20, face = "bold"),
plot.subtitle = element_markdown(color = "grey", size = 16),
legend.position="bottom",
legend.text=element_text(size=16),
legend.title=element_text(size=16))
ggplot(df, aes(x = leto)) +
geom_line(aes(y = zenske.s, color = "zenske"), size=1.1) +
geom_line(aes(y = moski.s, color = "moski"), size=1.1) +
scale_color_manual(values = c('zenske' = 'pink', 'moski' = 'lightblue')) +
scale_x_continuous(breaks=seq(2002, 2022, 3)) +
scale_y_continuous(breaks=seq(500, 5000, 600)) +
labs(color = 'SPOL') +
theme_ipsum(grid="Y", strip_text_size = 15, axis_text_size = 12, axis_title_size = 12) +
xlab("leto") + ylab("stevilo umrlih") +
facet_wrap(~vzrok, scales='free_x') +
theme(plot.title = element_text(color = "black", size = 20, face = "bold"),
plot.subtitle = element_markdown(color = "grey", size = 16),
legend.position="bottom",
legend.text=element_text(size=16),
legend.title=element_text(size=16))
ggplot(df, aes(x = leto)) +
geom_line(aes(y = zenske.s, color = "zenske"), size=1.1) +
geom_line(aes(y = moski.s, color = "moski"), size=1.1) +
scale_color_manual(values = c('zenske' = 'pink', 'moski' = 'lightblue')) +
scale_x_continuous(breaks=seq(2002, 2022, 2)) +
scale_y_continuous(breaks=seq(500, 5000, 600)) +
labs(color = 'SPOL') +
theme_ipsum(grid="Y", strip_text_size = 15, axis_text_size = 12, axis_title_size = 12) +
xlab("leto") + ylab("stevilo umrlih") +
facet_wrap(~vzrok, scales='free_x') +
theme(plot.title = element_text(color = "black", size = 20, face = "bold"),
plot.subtitle = element_markdown(color = "grey", size = 16),
legend.position="bottom",
legend.text=element_text(size=16),
legend.title=element_text(size=16))
df1 <- podatki[podatki$KOHEZIJSKA.REGIJA =="SLOVENIJA" & podatki$SPOL =="Moski" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ",]
df2 <- podatki[podatki$KOHEZIJSKA.REGIJA =="SLOVENIJA" & podatki$SPOL =="Zenske" & podatki$VZROK.SMRTI != "Vzrok smrti - SKUPAJ",]
df = data.frame(moski.s = df1$stevilo, zenske.s = df2$stevilo, leto = df1$LETO, vzrok = df1$VZROK.SMRTI)
df[df$vzrok =="Poskodbe, zastrupitve in nekatere druge posledice zunanjih vzrokov (S00-T98)", "vzrok"] = "Poskodbe, zastrupitve, zunanji vzroki (S00-T98)"
ggplot(df, aes(x = leto)) +
geom_line(aes(y = zenske.s, color = "zenske"), size=1.1) +
geom_line(aes(y = moski.s, color = "moski"), size=1.1) +
scale_color_manual(values = c('zenske' = 'pink', 'moski' = 'lightblue')) +
scale_x_continuous(breaks=seq(2002, 2022, 2)) +
scale_y_continuous(breaks=seq(500, 5000, 600)) +
labs(color = 'SPOL') +
theme_ipsum(grid="Y", strip_text_size = 15, axis_text_size = 12, axis_title_size = 12) +
xlab("leto") + ylab("stevilo umrlih") +
facet_wrap(~vzrok, scales='free_x') +
theme(plot.title = element_text(color = "black", size = 20, face = "bold"),
plot.subtitle = element_markdown(color = "grey", size = 16),
legend.position="bottom",
legend.text=element_text(size=16),
legend.title=element_text(size=16))
ggplot(df, aes(x = leto)) +
geom_line(aes(y = zenske.s, color = "zenske"), size=1.1) +
geom_line(aes(y = moski.s, color = "moski"), size=1.1) +
scale_color_manual(values = c('zenske' = 'pink', 'moski' = 'lightblue')) +
scale_x_continuous(breaks=seq(2002, 2022, 3)) +
scale_y_continuous(breaks=seq(100, 5000, 400)) +
labs(color = 'SPOL') +
theme_ipsum(grid="Y", strip_text_size = 15, axis_text_size = 12, axis_title_size = 12) +
xlab("leto") + ylab("stevilo umrlih") +
facet_wrap(~vzrok, scales='free_x') +
theme(plot.title = element_text(color = "black", size = 20, face = "bold"),
plot.subtitle = element_markdown(color = "grey", size = 16),
legend.position="bottom",
legend.text=element_text(size=16),
legend.title=element_text(size=16))
