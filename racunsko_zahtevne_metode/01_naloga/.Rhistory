par(mfrow = c(1, 2))
plot(proflik(fit1.ml, geodata = ca20, sill.val = seq(100, 200, l = 20),
range.val = seq(0.1, 500, l = 20), uni.only = TRUE))
plot(variog1, pch = 16)
lines(fit1, col = "red", lwd = 2)
lines(fit1.ml, col = "green", lwd = 2)
legend("bottomright", col = c("red", "green"), lty = 1, lwd = 2, legend = c("fit1", "fit1.ml"))
# eksponentni model variograma brez zlatega zrna
variogram1 <- variog(ca20, max.dist = 6000)
initial.values <- expand.grid(seq(80, 100, l=10), seq(400, 6000, by = 20))
fit1 <- variofit(variogram1,
cov.model = "exp",
ini.cov.pars = initial.values,
fix.nugget = TRUE,
nugget = 0,
max.dist = 6000,
weights = "npairs")
fit1.ml <- likfit(ca20, ini.cov.pars = fit1, cov.model = "exp",
fix.nugget = TRUE, lik.met = "ML")
fit1.ml
par(mfrow = c(1, 2))
plot(proflik(fit1.ml, geodata = ca20, sill.val = seq(100, 200, l = 20),
range.val = seq(0.1, 500, l = 20), uni.only = TRUE))
plot(variog1, pch = 16)
lines(fit1, col = "red", lwd = 2)
lines(fit1.ml, col = "green", lwd = 2)
legend("bottomright", col = c("red", "green"), lty = 1, lwd = 2, legend = c("fit1", "fit1.ml"))
# eksponentni model variograma brez zlatega zrna
variogram1 <- variog(ca20, max.dist = 6000)
initial.values <- expand.grid(seq(20, 80, l=10), seq(400, 6000, by = 20))
fit1 <- variofit(variogram1,
cov.model = "exp",
ini.cov.pars = initial.values,
fix.nugget = TRUE,
nugget = 0,
max.dist = 6000,
weights = "npairs")
fit1.ml <- likfit(ca20, ini.cov.pars = fit1, cov.model = "exp",
fix.nugget = TRUE, lik.met = "ML")
fit1.ml
par(mfrow = c(1, 2))
plot(proflik(fit1.ml, geodata = ca20, sill.val = seq(100, 200, l = 20),
range.val = seq(0.1, 500, l = 20), uni.only = TRUE))
par(mfrow = c(1, 2))
plot(proflik(fit1.ml, geodata = ca20, sill.val = seq(100, 200, l = 20),
range.val = seq(0.1, 500, l = 20), uni.only = TRUE))
plot(variog1, pch = 16)
lines(fit1, col = "red", lwd = 2)
lines(fit1.ml, col = "green", lwd = 2)
legend("bottomright", col = c("red", "green"), lty = 1, lwd = 2, legend = c("fit1", "fit1.ml"))
fit2.ml <- likfit(ca20, ini.cov.pars = fit1, cov.model = "exp",
fix.nugget = FALSE, lik.met = "ML")
fit2.ml
par(mfrow = c(1, 3))
plot(proflik(fit2.ml, geodata = ca20, sill.val = seq(100, 200, l = 20),
range.val = seq(150, 200, l = 10), nugget.val = seq(0, 0.001, l = 20)),
uni.only = TRUE)
par(mfrow = c(1, 3))
plot(proflik(fit2.ml, geodata = ca20, sill.val = seq(100, 200, l = 20),
range.val = seq(0.1, 500, l = 20), nugget.val = seq(0, 0.001, l = 20)),
uni.only = TRUE)
knitr::opts_chunk$set(echo = FALSE, fig.pos = "H", out.extra = "", fig.height = 4, fig.width = 5, fig.align = 'center')
library(ggplot2)
library(kableExtra)
library(dplyr)
library(gridExtra)
source("auc_brez_CV.R", local = knitr::knit_global())
vrednosti = permutacija_bolezni$value
vrednost_M1 = vrednosti$M1_permutacija_bolezni
vrednost_M2 = vrednosti$M2_permutacija_bolezni
df = data.frame(ploscina = c(vrednost_M1, vrednost_M2),
marker = c(rep("M1", length(vrednost_M1)), rep("M2", length(vrednost_M2))))
g1 = ggplot(df, aes(x= ploscina, color=marker, fill = marker)) +
geom_histogram(aes(y=after_stat(density)), position="identity", alpha=0.5, bins = 100)+
geom_density(alpha=0.6)+
scale_color_manual(values=c("#56B4E9", "#E69F00"))+
scale_fill_manual(values=c("#56B4E9", "#E69F00"))+
labs(title="",
x="AUC", y = "density")+
theme_classic()
source("auc_brez_CV.R", local = knitr::knit_global())
vrednosti = permutacija_marker$value
vrednost_M1 = vrednosti$M1_permutacija_marker
vrednost_M2 = vrednosti$M2_permutacija_marker
df = data.frame(ploscina = c(vrednost_M1, vrednost_M2),
marker = c(rep("M1", length(vrednost_M1)), rep("M2", length(vrednost_M2))))
g2 = ggplot(df, aes(x= ploscina, color=marker, fill = marker)) +
geom_histogram(aes(y=after_stat(density)), position="identity", alpha=0.5, bins = 100)+
geom_density(alpha=0.6)+
xlim(0.695,0.735)+
scale_color_manual(values=c("#56B4E9", "#E69F00"))+
scale_fill_manual(values=c("#56B4E9", "#E69F00"))+
labs(title="",
x="AUC", y = " ")+
theme_classic()
grid.arrange(g1,g1, nrow=1)
library(openxlsx)
random_numbers <- sample(0:1000, 100, replace = TRUE)
random_df <- data.frame(random_numbers)
write.xlsx(random_df, "random_numbers.xlsx")
setwd("~/Documents/viri_podatkov/racunsko_zahtevne_metode/01_naloga")
knitr::opts_chunk$set(echo = FALSE, fig.align = "center", fig.pos = "H", message = FALSE, warning = FALSE, results = F, fig.height =3, fig.width = 6)
# potrebne knjiÅ¾nice
library(ggplot2)
library(car)
library(tidyr)
library(ADGofTest)
# seme
set.seed(2024)
generate_data <- function(n, means, vars) {
sample1 <- rnorm(n, mean = means, sd = sqrt(vars[1]))
sample2 <- rnorm(n, mean = means, sd = sqrt(vars[2]))
sample3 <- rnorm(n, mean = means, sd = sqrt(vars[3]))
data = data.frame(sample1 = sample1, sample2 = sample2, sample3 = sample3)
return(data)
}
n = 1000
means = 0
# vars = c("1,1,1", "1,10,1", "1,5,10")
vars = c(1,10,1)
data = generate_data(n, means, vars)
data.long = data.frame(vrednosti = c(data$sample1, data$sample2, data$sample3),
vzorec = c(rep("vzorec 1", n), rep("vzorec 2", n), rep("vzorec 3", n)))
g1 = ggplot(data.long, aes(x = vrednosti, color = vzorec)) +
geom_density(size = 0.5) +
labs(title = "var = (1,10,1)",
x = " ",
y = "density",
color = " ") +
guides(color = guide_legend(nrow = 1, override.aes = list(linetype = 1, shape = 15))) +
theme_minimal()
library(cowplot)
legend <- get_legend(g1)
g1 = g1 + theme(legend.position = "none")
vars = c(1,5,10)
data = generate_data(n, means, vars)
data.long = data.frame(vrednosti = c(data$sample1, data$sample2, data$sample3),
vzorec = c(rep("vzorec 1", n), rep("vzorec 2", n), rep("vzorec 3", n)))
g2 = ggplot(data.long, aes(x = vrednosti, color = vzorec)) +
geom_density(size = 0.5) +
labs(title = "var = (1,5,10)",
x = " ",
y = " ",
color = " ") +
guides(color = guide_legend(override.aes = list(linetype = 1, shape = 15))) +
theme_minimal() +
theme(legend.position = "none")
vars = c(1,1,1)
data = generate_data(n, means, vars)
data.long = data.frame(vrednosti = c(data$sample1, data$sample2, data$sample3),
vzorec = c(rep("vzorec 1", n), rep("vzorec 2", n), rep("vzorec 3", n)))
g3 = ggplot(data.long, aes(x = vrednosti, color = vzorec)) +
geom_density(size = 0.5) +
labs(title = "var = (1,1,1)",
x = " ",
y = " ",
color = " ") +
guides(color = guide_legend(override.aes = list(linetype = 1, shape = 15))) +
theme_minimal()+
theme(legend.position = "none")
library(gridExtra)
combined_plots <- plot_grid(g1, g2, g3, nrow = 1)
plot_grid(combined_plots, legend, ncol = 1, rel_heights = c(1, 0.3))
# ne vem al je bols da je box plot?
# ggplot(data.long, aes(x = vzorec, y = vrednosti, color = vzorec)) +
#  geom_boxplot(size = 0.5) +
#  labs(title = " ",
#       x = " ",
#       y = "density",
#       color = " ") +
#  guides(color = guide_legend(override.aes = list(linetype = 1, shape = 15))) +
#  theme_minimal()
st_ponovitev = 6000
velikost = c(15, 40, 60, 100, 200, 500)
settings = expand.grid(i=1:st_ponovitev, n = velikost,
var = c("1,10,1", "1,5,10", "1,1,1"))
if(file.exists("p_vrednost.RDS")){
res<-readRDS("p_vrednost.RDS")
} else {
res<-cbind(settings, pANOVA=NA, pANOVA_2=NA, pMETHOD3=NA)
for(row in 1:nrow(settings)){
velikost = settings$n[row]
var_skupaj = as.numeric(strsplit(as.character(settings$var[row]),",")[[1]])
sd1 = sqrt(var_skupaj[1])
sd2 = sqrt(var_skupaj[2])
sd3 = sqrt(var_skupaj[3])
x<-c(rnorm(velikost, 0, sd1),
rnorm(velikost, 0, sd2),
rnorm(velikost, 0, sd3))
gr<-factor(rep(1:3, times=c(velikost,velikost,velikost)))
res$pANOVA[row] = summary(aov(x~gr))[[1]][["Pr(>F)"]][1]
res$pANOVA_2[row] = oneway.test(x~gr, var.equal = FALSE)$p.value
p_test_enak_V = leveneTest(x~gr)$`Pr(>F)`[1]
if(p_test_enak_V > 0.05){
res$pMETHOD3[row] = summary(aov(x~gr))[[1]][["Pr(>F)"]][1]
} else {
res$pMETHOD3[row] = oneway.test(x~gr, var.equal = FALSE)$p.value
}
}
saveRDS(object = res, file="p_vrednost.RDS")
}
# dava v format long
resLong = pivot_longer(res, cols=matches("^p[AM]"), values_to = "pVal",
names_to = "method", names_prefix = "p")
levels(resLong$var) = c("var = (1,10,1)", "var = (1,5,10)", "var = (1,1,1)")
# testirava za enakomerno porazdelitev z Anderson-Darling testom
valAnal = aggregate(pVal~ n + var + method , data = resLong,
function(x)ad.test(x, distr.fun = punif)$p.value)
valAnal$n<-as.factor(valAnal$n)
ggplot(valAnal, aes(y=pVal, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(var))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("p-vrednost")
resLong
resLong$method[resLong$methode == "ANOVA"] = "classic ANOVA"
resLong$method[resLong$methode == "ANOVA_2"] = "Welch's ANOVA"
resLong$method[resLong$methode == "METHOD3"] = "Levene's test"
levels(resLong$var) = c("var = (1,10,1)", "var = (1,5,10)", "var = (1,1,1)")
# testirava za enakomerno porazdelitev z Anderson-Darling testom
valAnal = aggregate(pVal~ n + var + method , data = resLong,
function(x)ad.test(x, distr.fun = punif)$p.value)
valAnal
valAnal$method[valAnal$methode == "ANOVA"] = "classic ANOVA"
valAnal$method[valAnal$methode == "ANOVA_2"] = "Welch's ANOVA"
valAnal$method[valAnal$methode == "METHOD3"] = "Levene's test"
valAnal$n<-as.factor(valAnal$n)
ggplot(valAnal, aes(y=pVal, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(var))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("p-vrednost") +
labs(title = " ",
x = " ",
y = " ",
color = " ") +
```
ggplot(valAnal, aes(y=pVal, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(var))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("p-vrednost") +
labs(title = " ",
x = " ",
y = " ",
color = " ")
valAnal$method
# dava v format long
resLong = pivot_longer(res, cols=matches("^p[AM]"), values_to = "pVal",
names_to = "method", names_prefix = "p")
resLong$method[resLong$method == "ANOVA"] = "classic ANOVA"
resLong$method[resLong$method == "ANOVA_2"] = "Welch's ANOVA"
resLong$method[resLong$method == "METHOD3"] = "Levene's test"
levels(resLong$var) = c("var = (1,10,1)", "var = (1,5,10)", "var = (1,1,1)")
# testirava za enakomerno porazdelitev z Anderson-Darling testom
valAnal = aggregate(pVal~ n + var + method , data = resLong,
function(x)ad.test(x, distr.fun = punif)$p.value)
valAnal$method[valAnal$method == "ANOVA"] = "classic ANOVA"
valAnal$method[valAnal$method == "ANOVA_2"] = "Welch's ANOVA"
valAnal$method[valAnal$method == "METHOD3"] = "Levene's test"
valAnal$n<-as.factor(valAnal$n)
ggplot(valAnal, aes(y=pVal, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(var))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("p-vrednost") +
labs(title = " ",
x = " ",
y = " ",
color = " ")
# dava v format long
resLong = pivot_longer(res, cols=matches("^p[AM]"), values_to = "pVal",
names_to = "method", names_prefix = "p")
resLong$method[resLong$method == "ANOVA"] = "classic ANOVA"
resLong$method[resLong$method == "ANOVA_2"] = "Welch's ANOVA"
resLong$method[resLong$method == "METHOD3"] = "Levene's test"
levels(resLong$var) = c("var = (1,10,1)", "var = (1,5,10)", "var = (1,1,1)")
# testirava za enakomerno porazdelitev z Anderson-Darling testom
valAnal = aggregate(pVal~ n + var + method , data = resLong,
function(x)ad.test(x, distr.fun = punif)$p.value)
valAnal$method[valAnal$method == "ANOVA"] = "classic ANOVA"
valAnal$method[valAnal$method == "ANOVA_2"] = "Welch's ANOVA"
valAnal$method[valAnal$method == "METHOD3"] = "Levene's test"
valAnal$n<-as.factor(valAnal$n)
ggplot(valAnal, aes(y=pVal, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(var))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("p-vrednost") +
labs(title = " ",
x = " ",
y = " ",
color = " ") +
theme_minimal()
valAnal = aggregate(pVal~ n + var + method , data = resLong,
function(x)mean(x<0.05))
valAnal$n<-as.factor(valAnal$n)
ggplot(valAnal, aes(y=pVal, col=method, group=method, x=n))+
geom_point()+geom_smooth(se=F)+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(var)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("delez zavrnitve")
ggplot(valAnal, aes(y=pVal, col=method, group=method, x=n))+
geom_point()+geom_line()+#geom_smooth(se=F)+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(var)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("delez zavrnitve") +
labs(title = " ",
x = " ",
y = " ",
color = " ") +
theme_minimal()
st_ponovitev = 2000
velikost = c(15, 40, 60, 100, 200, 500)
povp = c("0,0.5,0", "0,-0.5,0.5")
settings = expand.grid(i=1:st_ponovitev, n = velikost, povp = povp,
var = "1,1,1")
if(file.exists("moc_enake.RDS")){
res_p<-readRDS("moc_enake.RDS")
} else {
res_p<-cbind(settings, pANOVA=NA, pANOVA_2=NA, pMETHOD3=NA)
for(row in 1:nrow(settings)){
velikost = settings$n[row]
var_skupaj = as.numeric(strsplit(as.character(settings$var[row]),",")[[1]])
sd1 = sqrt(var_skupaj[1])
sd2 = sqrt(var_skupaj[2])
sd3 = sqrt(var_skupaj[3])
povp_skupaj = as.numeric(strsplit(as.character(settings$povp[row]),",")[[1]])
povp1 = povp_skupaj[1]
povp2 = povp_skupaj[2]
povp3 = povp_skupaj[3]
x<-c(rnorm(velikost, povp1, sd1),
rnorm(velikost, povp2, sd2),
rnorm(velikost, povp3, sd3))
gr<-factor(rep(1:3, times=c(velikost,velikost,velikost)))
res_p$pANOVA[row] = summary(aov(x~gr))[[1]][["Pr(>F)"]][1]
res_p$pANOVA_2[row] = oneway.test(x~gr, var.equal = FALSE)$p.value
p_test_enak_V = leveneTest(x~gr)$`Pr(>F)`[1]
if(p_test_enak_V > 0.05){
res_p$pMETHOD3[row] = summary(aov(x~gr))[[1]][["Pr(>F)"]][1]
} else {
res_p$pMETHOD3[row] = oneway.test(x~gr, var.equal = FALSE)$p.value
}
}
saveRDS(object = res_p, file="moc_enake.RDS")
}
# dava v format long
resLong_P = pivot_longer(res_p, cols=matches("^p[AM]"), values_to = "power",
names_to = "method", names_prefix = "p")
levels(resLong_P$povp) = c("povp = (0,0.5,0)", "povp = (0,-0.5,0.5)")
levels(resLong_P$var) = c("var = (1,1,1)")
# testirava za enakomerno porazdelitev z Anderson-Darling testom
valAnal_P = aggregate(power ~ n + method + povp, data = resLong_P,
function(x)mean(x<0.05))
valAnal_P$n<-as.factor(valAnal_P$n)
ggplot(valAnal_P, aes(y=power, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(povp))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("moc")
# dava v format long
resLong_P = pivot_longer(res_p, cols=matches("^p[AM]"), values_to = "power",
names_to = "method", names_prefix = "p")
levels(resLong_P$povp) = c("povp = (0,0.5,0)", "povp = (0,-0.5,0.5)")
levels(resLong_P$var) = c("var = (1,1,1)")
# testirava za enakomerno porazdelitev z Anderson-Darling testom
valAnal_P = aggregate(power ~ n + method + povp, data = resLong_P,
function(x)mean(x<0.05))
valAnal_P$method[valAnal_P$method == "ANOVA"] = "classic ANOVA"
valAnal_P$method[valAnal_P$method == "ANOVA_2"] = "Welch's ANOVA"
valAnal_P$method[valAnal_P$method == "METHOD3"] = "Levene's test"
valAnal_P$n<-as.factor(valAnal_P$n)
ggplot(valAnal_P, aes(y=power, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(povp))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("moc") +
labs(title = " ",
color = " ") +
theme_minimal()
st_ponovitev = 2000
velikost = c(15, 40, 60, 100, 200, 500)
povp = c("0,1,0", "0,-1,1")
settings = expand.grid(i=1:st_ponovitev, n = velikost, povp = povp,
var = c("1,10,1", "1,5,10"))
if(file.exists("moc_razlicne.RDS")){
res_p<-readRDS("moc_razlicne.RDS")
} else {
res_p<-cbind(settings, pANOVA_2=NA, pMETHOD3=NA)
for(row in 1:nrow(settings)){
velikost = settings$n[row]
var_skupaj = as.numeric(strsplit(as.character(settings$var[row]),",")[[1]])
sd1 = sqrt(var_skupaj[1])
sd2 = sqrt(var_skupaj[2])
sd3 = sqrt(var_skupaj[3])
povp_skupaj = as.numeric(strsplit(as.character(settings$povp[row]),",")[[1]])
povp1 = povp_skupaj[1]
povp2 = povp_skupaj[2]
povp3 = povp_skupaj[3]
x<-c(rnorm(velikost, povp1, sd1),
rnorm(velikost, povp2, sd2),
rnorm(velikost, povp3, sd3))
gr<-factor(rep(1:3, times=c(velikost,velikost,velikost)))
# res_p$pANOVA[row] = summary(aov(x~gr))[[1]][["Pr(>F)"]][1]
res_p$pANOVA_2[row] = oneway.test(x~gr, var.equal = FALSE)$p.value
p_test_enak_V = leveneTest(x~gr)$`Pr(>F)`[1]
if(p_test_enak_V > 0.05){
res_p$pMETHOD3[row] = summary(aov(x~gr))[[1]][["Pr(>F)"]][1]
} else {
res_p$pMETHOD3[row] = oneway.test(x~gr, var.equal = FALSE)$p.value
}
}
saveRDS(object = res_p, file="moc_razlicne.RDS")
}
# dava v format long
resLong_P = pivot_longer(res_p, cols=matches("^p[AM]"), values_to = "power",
names_to = "method", names_prefix = "p")
levels(resLong_P$povp) = c("povp = (0,1,0)", "povp = (0,-1,1)")
levels(resLong_P$var) = c("var = (1,10,1)", "var = (1,5,10)")
# testirava za enakomerno porazdelitev z Anderson-Darling testom
valAnal_P = aggregate(power ~ n + var + method + povp, data = resLong_P,
function(x)mean(x<0.05))
valAnal_P$method[valAnal_P$method == "ANOVA"] = "classic ANOVA"
valAnal_P$method[valAnal_P$method == "ANOVA_2"] = "Welch's ANOVA"
valAnal_P$method[valAnal_P$method == "METHOD3"] = "Levene's test"
valAnal_P$n<-as.factor(valAnal_P$n)
ggplot(valAnal_P, aes(y=power, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_grid(var~povp)+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("moc") +
labs(title = " ",
color = " ") +
theme_minimal()
knitr::opts_chunk$set(echo = FALSE, fig.align = "center", fig.pos = "H", message = FALSE, warning = FALSE, results = F, fig.height =3, fig.width = 6.5)
# potrebne knjiÅ¾nice
library(ggplot2)
library(car)
library(tidyr)
library(ADGofTest)
# seme
set.seed(2024)
# dava v format long
resLong_P = pivot_longer(res_p, cols=matches("^p[AM]"), values_to = "power",
names_to = "method", names_prefix = "p")
levels(resLong_P$povp) = c("povp = (0,0.5,0)", "povp = (0,-0.5,0.5)")
levels(resLong_P$var) = c("var = (1,1,1)")
st_ponovitev = 2000
velikost = c(15, 40, 60, 100, 200, 500)
povp = c("0,0.5,0", "0,-0.5,0.5") # Neza: kaj je tole povp?
settings = expand.grid(i=1:st_ponovitev, n = velikost, povp = povp,
var = "1,1,1")
if(file.exists("moc_enake.RDS")){
res_p<-readRDS("moc_enake.RDS")
} else {
res_p<-cbind(settings, pANOVA=NA, pANOVA_2=NA, pMETHOD3=NA)
for(row in 1:nrow(settings)){
velikost = settings$n[row]
var_skupaj = as.numeric(strsplit(as.character(settings$var[row]),",")[[1]])
sd1 = sqrt(var_skupaj[1])
sd2 = sqrt(var_skupaj[2])
sd3 = sqrt(var_skupaj[3])
povp_skupaj = as.numeric(strsplit(as.character(settings$povp[row]),",")[[1]])
povp1 = povp_skupaj[1]
povp2 = povp_skupaj[2]
povp3 = povp_skupaj[3]
x<-c(rnorm(velikost, povp1, sd1),
rnorm(velikost, povp2, sd2),
rnorm(velikost, povp3, sd3))
gr<-factor(rep(1:3, times=c(velikost,velikost,velikost)))
res_p$pANOVA[row] = summary(aov(x~gr))[[1]][["Pr(>F)"]][1]
res_p$pANOVA_2[row] = oneway.test(x~gr, var.equal = FALSE)$p.value
p_test_enak_V = leveneTest(x~gr)$`Pr(>F)`[1]
if(p_test_enak_V > 0.05){
res_p$pMETHOD3[row] = summary(aov(x~gr))[[1]][["Pr(>F)"]][1]
} else {
res_p$pMETHOD3[row] = oneway.test(x~gr, var.equal = FALSE)$p.value
}
}
saveRDS(object = res_p, file="moc_enake.RDS")
}
# dava v format long
resLong_P = pivot_longer(res_p, cols=matches("^p[AM]"), values_to = "power",
names_to = "method", names_prefix = "p")
levels(resLong_P$povp) = c("povp = (0,0.5,0)", "povp = (0,-0.5,0.5)")
levels(resLong_P$var) = c("var = (1,1,1)")
# testirava za enakomerno porazdelitev z Anderson-Darling testom
valAnal_P = aggregate(power ~ n + method + povp, data = resLong_P,
function(x)mean(x<0.05))
valAnal_P$method[valAnal_P$method == "ANOVA"] = "classic ANOVA"
valAnal_P$method[valAnal_P$method == "ANOVA_2"] = "Welch's ANOVA"
valAnal_P$method[valAnal_P$method == "METHOD3"] = "Levene's test"
valAnal_P$n<-as.factor(valAnal_P$n)
ggplot(valAnal_P, aes(y=power, col=method, group=method, x=n))+
geom_point()+geom_line()+
geom_hline(yintercept = 0.05)+
facet_wrap(vars(povp))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("moc") +
labs(title = " ",
color = " ") +
theme_minimal()
