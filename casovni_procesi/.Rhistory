points(s100, main = "s100")
par(mfrow = c(1, 2))
plot(seq(from = 0, to = 3, l = 61), napovedi[,2], type = "l",
ylim = c(-1, 1.5),
xlab = expression(s[0]), ylab = expression(paste("z(", s[0], ")")))
lines(seq(from = 0, to = 3, l = 61), napovedi[,4], type = "l", col = "red")
lines(seq(from = 0, to = 3, l = 61), napovedi[,6], type = "l", col = "green")
abline(h = 0, col = "grey", lty = 2)
points(c(1, 2), c(-0.5, 1), pch = 16)
legend(0, 1.5, legend = c("h0 = 0.5", "h0 = 1", "h0 = 2"),
col = c("black", "red", "green"), lty = 1)
plot(seq(from = 0, to = 3, l = 61), napovedi[,3], type = "l", ylim = c(0, 1.5),
xlab = expression(s[0]), ylab = "MSE")
lines(seq(from = 0, to = 3, l = 61), napovedi[,5], type = "l", col = "red")
lines(seq(from = 0, to = 3, l = 61), napovedi[,7], type = "l", col = "green")
abline(h = 0, col = "grey", lty = 2)
points(c(1, 2), c(-0, 0), pch = 16)
legend(0, 1.5, legend = c("h0 = 0.5", "h0 = 1", "h0 = 2"),
col = c("black", "red", "green"), lty = 1)
napovedi <- data.frame(rep(NA, times = 61))
#  Eksponentni semivariogram, phi = h0/3
for (phi in c(0.5/3, 1/3, 2/3)) {
nap.sk <- krige.conv(geodata = dve.geo, locations = lok,
krige = krige.control(cov.model = "exp",
type.krige = "SK",
beta = 0, cov.pars = c(1, phi)))
napovedi <- cbind(napovedi, data.frame(nap.sk$predict, nap.sk$krige.var))
}
#  Eksponentni semivariogram, phi = h0/3
for (phi in c(0.5/3, 1/3, 2/3)) {
nap.sk <- krige.conv(geodata = dve.geo, locations = lok,
krige = krige.control(cov.model = "exp",
type.krige = "SK",
beta = 0, cov.pars = c(1, phi)))
napovedi <- cbind(napovedi, data.frame(nap.sk$predict, nap.sk$krige.var))
}
par(mfrow = c(1, 2))
plot(seq(from = 0, to = 3, l = 61), napovedi[,2], type = "l", ylim = c(-1, 1.5),
xlab = expression(s[0]), ylab = expression(paste("z(", s[0],")")))
lines(seq(from = 0, to = 3, l = 61), napovedi[,4], type = "l", col = "red")
lines(seq(from = 0, to = 3, l = 61), napovedi[,6], type = "l", col = "green")
abline(h = 0, col = "grey", lty = 2)
points(c(1, 2), c(-0.5, 1), pch = 16)
legend(0, 1.5, legend = c("razmik = 0.5", "razmik = 1", "razmik = 2"),
col = c("black", "red", "green"), lty = 1)
plot(seq(from = 0, to = 3, l = 61), napovedi[,3], type = "l", ylim = c(0, 1.5),
xlab = expression(s[0]), ylab = "MSE")
lines(seq(from = 0, to = 3, l = 61), napovedi[,5], type = "l", col = "red")
lines(seq(from = 0, to = 3, l = 61), napovedi[,7], type = "l", col = "green")
abline(h = 0, col = "grey", lty = 2)
points(c(1, 2), c(-0, 0), pch = 16)
legend(0, 1.5, legend = c("razmik = 0.5", "razmik = 1", "razmik = 2"),
col = c("black", "red", "green"), lty = 1)
set.seed(4321)
s100 <- grf(100, grid = "irreg", cov.pars = c(1, 0.5/sqrt(3)),
cov.model = "gauss")
points(s100)
loci <- expand.grid(seq(0, 1, l = 51), seq(0, 1, l = 51))
points(loci)
nap.ek <- krige.conv(geodata = s100, locations = loci,
krige = krige.control(cov.model = "gauss",
type.krige = "SK", beta = 1,
cov.pars = c(1, 0.5/sqrt(3))))
par(mfrow = c(1,2))
points(s100, main = "s100")
image(nap.ek, main = "Napovedi enostavnega kriginga")
points(s100, main = "s100")
image(nap.ek, val = sqrt(nap.ek$krige.var), main = "Standardna napaka kriginga")
summary(sqrt(nap.ek$krige.var))
set.seed(4321)
s100 <- grf(100, grid = "irreg", cov.pars = c(1, 0.5), cov.model = "sph")
# mreža lokacij za napoved
loci <- expand.grid(seq(0, 1, l = 51), seq(0, 1, l = 51))
nap.ek <- krige.conv(geodata = s100, locations = loci,
krige = krige.control(cov.model = "sph",
type.krige = "SK", beta = 1,
cov.pars = c(1, 0.5)))
par(mfrow = c(1, 2))
points(s100, main = "s100")
image(nap.ek, main = "Napovedi enostavnega kriginga")
points(s100, main = "s100")
image(nap.ek, val = sqrt(nap.ek$krige.var), main = "Povprečna napaka kriginga")
par(mfrow = c(1,1))
# zaradi ponovljivosti
set.seed(333)
s10 <- grf(30, grid = "reg", ny = 3, nx = 10,
cov.pars = c(1, 0.5/3), cov.model = "exp", mean = 0)
points(s10) # simulirana realizacija
plot(s10) # vzorčni semivariogram in teoretični model za semivariogram
# šibko stacionarnemu prostorskemu procesu dodamo
# še linearni trend glede na vrednost prve koordinate
mean <- 5 + 5 * s10$coords[,1]
s10$data <- s10$data + mean
points(s10) # vidi se trend v smeri osi x
plot(s10) # vzorčni variogram narašča brez asimptote - posledica trenda
s10.1 <- grf(30, grid = "reg", ny = 3, nx = 10,
cov.pars = c(3, 0.5/3), cov.model = "exp", mean = 0)
mean <- 5 + 5 * s10.1$coords[,1]
s10.1$data <- s10.1$data + mean
points(s10.1)
plot(s10.1)
pred.grid <- expand.grid(seq(0, 1, l = 31), 0.5)
plot(pred.grid)
nap.uk <- krige.conv(s10, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st",trend.l = "1st",
cov.pars = c(1, 0.5/3)))
nap.uk.1 <- krige.conv(s10.1, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st", trend.l = "1st",
cov.pars = c(3, 0.5/3)))
plot(seq(from = 0, to = 1, l = 31), nap.uk$predict, type = "p",
ylim = c(0, 14),
xlab = expression(s[0]), ylab = expression(paste("z(", s[0], ")")))
abline(a = 5, b = 5, col = "grey", lty = 2)
points(s10$coords[,1][s10$coords[,2] == 0.5],
s10$data[s10$coords[,2] == 0.5], pch = 16)
points(seq(from = 0, to = 1, l = 31), nap.uk.1$predict, col = "red")
points(s10.1$coords[,1][s10.1$coords[,2] == 0.5],
s10.1$data[s10.1$coords[,2] == 0.5], pch = 16, col = "red")
legend(0, 14, legend = c("prag = 1", "prag = 3"),
col = c("black","red"), pch = 1)
pred.grid <- expand.grid(seq(0, 1, l = 301), 0.5)
nap.uk <- krige.conv(s10, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st",trend.l = "1st",
cov.pars = c(1, 0.5/3)))
nap.uk.1 <- krige.conv(s10.1, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st", trend.l = "1st",
cov.pars = c(3, 0.5/3)))
plot(seq(from = 0, to = 1, l = 301), nap.uk$krige.var, type = "l",
ylim = c(0, 1.5),
xlab = expression(s[0]), ylab = "Varianca splošnega kriginga")
abline(h = 0, col = "grey", lty = 2)
points(s10$coords[,1][s10$coords[,2] == 0.5], rep(0,10), pch = 16)
points(s10.1$coords[,1][s10.1$coords[,2] == 0.5],
s10.1$data[s10.1$coords[,2] == 0.5], pch = 16)
lines(seq(from = 0, to = 1, l = 301), nap.uk.1$krige.var, type = "l",
col = "red")
points(s10.1$coords[,1][s10.1$coords[,2] == 0.5], rep(0, 10), pch = 16)
legend(0, 1.5, legend = c("prag = 1", "prag = 3"),
col = c("black","red"), lty = 1)
set.seed(4321)
# generiramo najprej realizacijo prostorskega procesa s povprečjem 0
s100 <- grf(100, grid = "irreg", cov.pars = c(1, 0.5/3),
cov.model = "sph", mean = 0)
mean <- 5 + 5 * s100$coords[,1]
# grid = mreža(pravilna=pravokotna mreža)
# cov.pars(varianca prostorskega procesa, razmik)
# cov.model = model, gauss ima res gladko polje
points(s100)
# mreža lokacij za napoved - zgeneriramo lokacije kamor bomo napovedovali(expand.grid povemo n akaterem intervalu, koliko vrednosti, v kateri smeri)
loci <- expand.grid(seq(0, 1, l = 51), seq(0, 1, l = 51))
points(loci)
nap.ek <- krige.conv(geodata = s100, locations = loci,
krige = krige.control(cov.model = "gauss",
type.krige = "SK", beta = 1,
cov.pars = c(1, 0.5/sqrt(3))))
par(mfrow = c(1,2))
points(s100, main = "s100")
image(nap.ek, main = "Napovedi enostavnega kriginga")
points(s100, main = "s100")
image(nap.ek, val = sqrt(nap.ek$krige.var), main = "Standardna napaka kriginga")
summary(sqrt(nap.ek$krige.var))
par(mfrow = c(1,2))
points(s100, main = "s100")
image(nap.ek, main = "Napovedi enostavnega kriginga")
par(mfrow = c(1,2))
points(s100, main = "s100")
image(nap.ek, main = "Napovedi enostavnega kriginga")
nap.ek <- krige.conv(geodata = s100, locations = loci,
krige = krige.control(cov.model = "gauss",
type.krige = "SK", beta = 1, # beta=1 - povprečje je enako 1, še vedno imamo enostavni kriging
cov.pars = c(1, 0.5/sqrt(3))))
par(mfrow = c(1,2))
points(s100, main = "s100")
image(nap.ek, main = "Napovedi enostavnega kriginga")
# mreža lokacij za napoved - zgeneriramo lokacije kamor bomo napovedovali(expand.grid povemo n akaterem intervalu, koliko vrednosti, v kateri smeri)
loci <- expand.grid(seq(0, 1, l = 51), seq(0, 1, l = 51))
points(loci)
nap.ek <- krige.conv(geodata = s100, locations = loci,
krige = krige.control(cov.model = "gauss",
type.krige = "SK", beta = 1, # beta=1 - povprečje je enako 1, še vedno imamo enostavni kriging
cov.pars = c(1, 0.5/sqrt(3))))
par(mfrow = c(1,2))
points(s100, main = "s100")
image(nap.ek, main = "Napovedi enostavnega kriginga")
points(s100, main = "s100")
image(nap.ek, val = sqrt(nap.ek$krige.var), main = "Standardna napaka kriginga")
summary(sqrt(nap.ek$krige.var))
set.seed(4321)
# sferični semivariogram
set.seed(4321)
s100 <- grf(100, grid = "irreg", cov.pars = c(1, 0.5), cov.model = "sph")
# mreža lokacij za napoved
loci <- expand.grid(seq(0, 1, l = 51), seq(0, 1, l = 51))
nap.ek <- krige.conv(geodata = s100, locations = loci,
krige = krige.control(cov.model = "sph",
type.krige = "SK", beta = 1,
cov.pars = c(1, 0.5)))
par(mfrow = c(1, 2))
points(s100, main = "s100")
image(nap.ek, main = "Napovedi enostavnega kriginga")
points(s100, main = "s100")
image(nap.ek, val = sqrt(nap.ek$krige.var), main = "Povprečna napaka kriginga")
par(mfrow = c(1,1))
# Splošni kriging
# zaradi ponovljivosti
set.seed(333)
s10 <- grf(30, grid = "reg", ny = 3, nx = 10,
cov.pars = c(1, 0.5/3), cov.model = "exp", mean = 0)
points(s10) # simulirana realizacija
plot(s10) # vzorčni semivariogram in teoretični model za semivariogram
# šibko stacionarnemu prostorskemu procesu dodamo
# še linearni trend glede na vrednost prve koordinate
mean <- 5 + 5 * s10$coords[,1]
points(s10) # simulirana realizacija
plot(s10) # vzorčni semivariogram in teoretični model za semivariogram
# šibko stacionarnemu prostorskemu procesu dodamo
# še linearni trend glede na vrednost prve koordinate
mean <- 5 + 5 * s10$coords[,1] # trend v smeri koordinate x, si ga izmislimo
s10$data <- s10$data + mean
points(s10) # vidi se trend v smeri osi x
plot(s10) # vzorčni variogram narašča brez asimptote - posledica trenda
s10.1 <- grf(30, grid = "reg", ny = 3, nx = 10,
cov.pars = c(3, 0.5/3), cov.model = "exp", mean = 0)
mean <- 5 + 5 * s10.1$coords[,1]
s10.1$data <- s10.1$data + mean
points(s10.1)
plot(s10.1)
# povečamo varianco
s10.1 <- grf(30, grid = "reg", ny = 3, nx = 10,
cov.pars = c(3, 0.5/3), cov.model = "exp", mean = 0)
mean <- 5 + 5 * s10.1$coords[,1]
s10.1$data <- s10.1$data + mean
points(s10.1)
plot(s10.1)
# napovedujemo za srednjo vrsto realizacije podatkov s2 = 0.5
pred.grid <- expand.grid(seq(0, 1, l = 31), 0.5)
plot(pred.grid)
nap.uk <- krige.conv(s10, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st",trend.l = "1st",
cov.pars = c(1, 0.5/3)))
nap.uk.1 <- krige.conv(s10.1, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st", trend.l = "1st",
cov.pars = c(3, 0.5/3)))
plot(seq(from = 0, to = 1, l = 31), nap.uk$predict, type = "p",
ylim = c(0, 14),
xlab = expression(s[0]), ylab = expression(paste("z(", s[0], ")")))
abline(a = 5, b = 5, col = "grey", lty = 2)
points(s10$coords[,1][s10$coords[,2] == 0.5],
s10$data[s10$coords[,2] == 0.5], pch = 16)
points(seq(from = 0, to = 1, l = 31), nap.uk.1$predict, col = "red")
points(s10.1$coords[,1][s10.1$coords[,2] == 0.5],
s10.1$data[s10.1$coords[,2] == 0.5], pch = 16, col = "red")
legend(0, 14, legend = c("prag = 1", "prag = 3"),
col = c("black","red"), pch = 1)
pred.grid <- expand.grid(seq(0, 1, l = 301), 0.5)
nap.uk <- krige.conv(s10, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st",trend.l = "1st",
cov.pars = c(1, 0.5/3)))
nap.uk.1 <- krige.conv(s10.1, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st", trend.l = "1st",
cov.pars = c(3, 0.5/3)))
plot(seq(from = 0, to = 1, l = 301), nap.uk$krige.var, type = "l",
ylim = c(0, 1.5),
xlab = expression(s[0]), ylab = "Varianca splošnega kriginga")
abline(h = 0, col = "grey", lty = 2)
points(s10$coords[,1][s10$coords[,2] == 0.5], rep(0,10), pch = 16)
points(s10.1$coords[,1][s10.1$coords[,2] == 0.5],
s10.1$data[s10.1$coords[,2] == 0.5], pch = 16)
lines(seq(from = 0, to = 1, l = 301), nap.uk.1$krige.var, type = "l",
col = "red")
points(s10.1$coords[,1][s10.1$coords[,2] == 0.5], rep(0, 10), pch = 16)
legend(0, 1.5, legend = c("prag = 1", "prag = 3"),
col = c("black","red"), lty = 1)
# več napovedi, za lepši prikaz variance kriginga
# varianca kriginga se spreminja z razdaljo
pred.grid <- expand.grid(seq(0, 1, l = 301), 0.5)
nap.uk <- krige.conv(s10, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st",trend.l = "1st",
cov.pars = c(1, 0.5/3)))
nap.uk.1 <- krige.conv(s10.1, loc = pred.grid,
krige = krige.control(cov.model = "exp",
trend.d = "1st", trend.l = "1st",
cov.pars = c(3, 0.5/3)))
plot(seq(from = 0, to = 1, l = 301), nap.uk$krige.var, type = "l",
ylim = c(0, 1.5),
xlab = expression(s[0]), ylab = "Varianca splošnega kriginga")
abline(h = 0, col = "grey", lty = 2)
points(s10$coords[,1][s10$coords[,2] == 0.5], rep(0,10), pch = 16)
points(s10.1$coords[,1][s10.1$coords[,2] == 0.5],
s10.1$data[s10.1$coords[,2] == 0.5], pch = 16)
lines(seq(from = 0, to = 1, l = 301), nap.uk.1$krige.var, type = "l",
col = "red")
points(s10.1$coords[,1][s10.1$coords[,2] == 0.5], rep(0, 10), pch = 16)
legend(0, 1.5, legend = c("prag = 1", "prag = 3"),
col = c("black","red"), lty = 1)
set.seed(4321)
# generiramo najprej realizacijo prostorskega procesa s povprečjem 0
s100 <- grf(100, grid = "irreg", cov.pars = c(1, 0.5/3),
cov.model = "sph", mean = 0)
# generiranim vrednostim dodamo linearni prostorski trend
mean <- 5 + 5 * s100$coords[,1]
s100$data <- s100$data + mean
pred.grid <- expand.grid(seq(0, 1, l = 51), seq(0, 1, l = 51))
# parametre modela semivariograma ocenimo z metodo največjega verjetja
# s funkcijo likfit()
mlfit <- likfit(geodata = s100, trend = "1st", cov.model = "sph",
ini.cov.pars = c(1, 0.1))
mlfit
mlfit
# Profile-log-likelihood za parametra sferičnega modela semivariograma.
par(mfrow = c(1, 2))
# Profile-log-likelihood za parametra sferičnega modela semivariograma.
par(mfrow = c(1, 2))
# ?proflik
plot(proflik(mlfit, geodata = s100, uni.only = TRUE,
sill.val = seq(0.5, 2, l = 20), range.val = seq(0.1, 0.3, l = 20)))
# in napovedi za splošni kriging
nap.uk <- krige.conv(s100, loc = pred.grid,
krige = krige.control(obj.m = mlfit,
trend.d = "1st", trend.l = "1st"))
par(mfrow = c(1, 2))
points(s100, main = "s100")
image(nap.uk, loc = pred.grid,
xlab = "Coord X", ylab = "Coord Y",
main = "Napovedi splosnega kriginga")
points(s100, main = "s100")
title("s100")
image(nap.uk, val = sqrt(nap.uk$krige.var),
main = "Standardna napaka splošnega kriginga")
# Kako na napovedi osnovnega kriginga vplivajo prag, razmik in zlato zrno?
# Primer (Isaaks in Srivastava, 1989)
s1 <- c(5, 20, 25, 8, 10, 35, 38)
s2 <- c(20, 2, 32, 39, 17, 20, 10)
# in napovedi za splošni kriging
nap.uk <- krige.conv(s100, loc = pred.grid,
krige = krige.control(obj.m = mlfit,
trend.d = "1st", trend.l = "1st"))
par(mfrow = c(1, 2))
points(s100, main = "s100")
image(nap.uk, loc = pred.grid,
xlab = "Coord X", ylab = "Coord Y",
main = "Napovedi splosnega kriginga")
points(s100, main = "s100")
title("s100")
image(nap.uk, val = sqrt(nap.uk$krige.var),
main = "Standardna napaka splošnega kriginga")
# Kako na napovedi osnovnega kriginga vplivajo prag, razmik in zlato zrno?
# Primer (Isaaks in Srivastava, 1989)
s1 <- c(5, 20, 25, 8, 10, 35, 38)
s2 <- c(20, 2, 32, 39, 17, 20, 10)
z <- c(100, 70, 60, 90, 50, 80, 40)
primer <- data.frame(s1, s2, z)
primer.geo <- as.geodata(primer, coords.col = 1:2, data.col = 3)
# Napovedati želimo vrednost prostorskega procesa na lokaciji (20, 20).
jpeg("polozaj.jpeg", width = 4, height = 4, units = 'in', res = 300)
points(primer.geo, pch = 16)
points(20, 20, pch = 16, col = "red")
text(s1, s2, labels = c(1:7), cex = 0.9, pos = 2)
dev.off()
mean(z)
# postavitev sedmih različnih modelov osnovnega kriginga
KC.A <- krige.control(cov.model="exp", cov.pars = c(10, 20/3))
KC.B <- krige.control(cov.model="exp", cov.pars = c(10, 10/3))
KC.C <- krige.control(cov.model="exp", cov.pars = c(5, 20/3), nug = 5)
KC.D <- krige.control(cov.model="pure.nugget", cov.pars = c(1, 1), nug = 10)
KC.E <- krige.control(cov.model="exp", cov.pars = c(20, 20/3))
KC.F <- krige.control(cov.model="gauss", cov.pars = c(10, 20/sqrt(3)))
a.A <- krweights(primer.geo$coords, loc = c(20, 20), krige = KC.A)
a.B <- krweights(primer.geo$coords, loc = c(20, 20), krige = KC.B)
a.C <- krweights(primer.geo$coords, loc = c(20, 20), krige = KC.C)
a.D <- krweights(primer.geo$coords, loc = c(20, 20), krige = KC.D)
a.E <- krweights(primer.geo$coords, loc = c(20, 20), krige = KC.E)
a.F <- krweights(primer.geo$coords, loc = c(20, 20), krige = KC.F)
# izračun Evklidske razdalje med lokacijami meritev in s0
euk.razdalja <- function(x1, x2) {
sqrt(sum((x1 - x2) ^ 2))
}
razdalje <- rep(NA, length(z))
for(i in c(1:length(z))){
razdalje[i] <- euk.razdalja(primer.geo$coords[i,], c(20, 20))
}
# izračun napovedi in variance napovedi
nap.ok.A <- krige.conv(primer.geo, loc = c(20, 20), krige = KC.A)
nap.ok.B <- krige.conv(primer.geo, loc = c(20, 20), krige = KC.B)
nap.ok.C <- krige.conv(primer.geo, loc = c(20, 20), krige = KC.C)
nap.ok.D <- krige.conv(primer.geo, loc = c(20, 20), krige = KC.D)
nap.ok.E <- krige.conv(primer.geo, loc = c(20, 20), krige = KC.E)
nap.ok.F <- krige.conv(primer.geo, loc = c(20, 20), krige = KC.F)
# tabela s povzetkom
napoved <- rbind(nap.ok.A$predict, nap.ok.B$predict, nap.ok.C$predict,
nap.ok.D$predict, nap.ok.E$predict, nap.ok.F$predict)
var.nap <- rbind(nap.ok.A$krige.var, nap.ok.B$krige.var,
nap.ok.C$krige.var, nap.ok.D$krige.var,
nap.ok.E$krige.var, nap.ok.F$krige.var)
a <- rbind(a.A, a.B, a.C, a.D, a.E, a.F, razdalje)
rez <- data.frame(cbind(c("A", "B", "C", "D", "E", "F", "razdalja"),
c(round(napoved, 2), ""),
c(round(var.nap, 2), ""),
round(a, 2)))
names(rez) <- c("model", "napoved", "var.nap", "a_1", "a_2", "a_3",
"a_4", "a_5", "a_6", "a_7")
rownames(rez) <- NULL
rez
data <- read.table("PROSTOR1.txt", header = TRUE, sep = "\t")
data.geo <- as.geodata(data, coords.col = 1:2, data.col = 3)
summary(data.geo)
plot(data.geo)
setwd("~/Desktop/modeliranje_casovnih_prostorskih procesov/06_predavanja")
# Pri napovedovanju upoštevamo najprej sferični model variograma brez variance
# zlatega zrna:
data <- read.table("PROSTOR1.txt", header = TRUE, sep = "\t")
data.geo <- as.geodata(data, coords.col = 1:2, data.col = 3)
summary(data.geo)
plot(data.geo)
x.range <- range(data[,1])
y.range <- range(data[,2])
grd<-expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.1),
y = seq(from = y.range[1], to = y.range[2], by = 0.1))
# parametre semivariograma ocenimo z ML, ki za začetne vrednosti vzame
# ocene dobljene s funkcijo variofit
# najprej za sferični model variograma brez zlatega zrna
variogram1 <- variog(data.geo, max.dist = 6)
initial.values <- expand.grid(seq(20, 40, by = 2),seq(2, 4,by = 1))
fit1 <- variofit(variogram1, cov.model = "sph", ini.cov.pars = initial.values,
fix.nugget = TRUE, nugget = 0, max.dist = 6,
weights = "npairs")
fit1.ml <- likfit(data.geo, ini.cov.pars = fit1, cov.model = "sph",
fix.nugget = TRUE, lik.met = "ML")
fit1.ml
par(mfrow = c(1, 2))
plot(proflik(fit1.ml, geodata = data.geo, sill.val = seq(10, 70, l = 20),
range.val = seq(1, 6, l = 12), uni.only = TRUE))
fit2.ml <- likfit(data.geo, ini.cov.pars = fit1, cov.model = "sph",
fix.nugget = FALSE, lik.met = "ML")
pod <- read.table("PADAVINESLO.txt", header = TRUE, sep = "\t")
str(pod)
pod <- read.table("PADAVINESLO.txt", header = TRUE, sep = "\t")
str(pod)
library(raster)
DEM <- raster("DEM1000.tif")
library(raster)
DEM <- raster("DEM1000.tif")
SLO <- shapefile("SLOmeja.shp")
SLO <- shapefile("SLOmeja.shp")
# Pri napovedovanju upoštevamo najprej sferični model variograma brez variance
# zlatega zrna:
data <- read.table("PROSTOR1.txt", header = TRUE, sep = "\t")
data.geo <- as.geodata(data, coords.col = 1:2, data.col = 3)
summary(data.geo)
plot(data.geo)
x.range <- range(data[,1])
y.range <- range(data[,2])
grd<-expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.1),
y = seq(from = y.range[1], to = y.range[2], by = 0.1))
# parametre semivariograma ocenimo z ML, ki za začetne vrednosti vzame
# ocene dobljene s funkcijo variofit
# najprej za sferični model variograma brez zlatega zrna
variogram1 <- variog(data.geo, max.dist = 6)
initial.values <- expand.grid(seq(20, 40, by = 2),seq(2, 4,by = 1))
fit1 <- variofit(variogram1, cov.model = "sph", ini.cov.pars = initial.values,
fix.nugget = TRUE, nugget = 0, max.dist = 6,
weights = "npairs")
fit1.ml <- likfit(data.geo, ini.cov.pars = fit1, cov.model = "sph",
fix.nugget = TRUE, lik.met = "ML")
fit1.ml
# Profile-log-likelihood za parametra sferičnega modela semivariograma brez
# zlatega zrna kaže na napačno izbiro modela prostorske korelacije
par(mfrow = c(1, 2))
plot(proflik(fit1.ml, geodata = data.geo, sill.val = seq(10, 70, l = 20),
range.val = seq(1, 6, l = 12), uni.only = TRUE))
fit1.ml
# Profile-log-likelihood za parametra sferičnega modela semivariograma brez
# zlatega zrna kaže na napačno izbiro modela prostorske korelacije
par(mfrow = c(1, 2))
plot(proflik(fit1.ml, geodata = data.geo, sill.val = seq(10, 70, l = 20),
range.val = seq(1, 6, l = 12), uni.only = TRUE))
# za oceno parametrov semivariograma z ML, ki za začetne vrednosti vzame
# ocene dobljene s funkcijo variofit fit1, ki ocenjuje tudi zlato zrno
fit2.ml <- likfit(data.geo, ini.cov.pars = fit1, cov.model = "sph",
fix.nugget = FALSE, lik.met = "ML")
fit2.ml
# Profile-log-likelihood za parametra sferičnega modela semivariograma z zlatim zrnom
par(mfrow = c(1, 3))
plot(proflik(fit2.ml, geodata = data.geo, sill.val = seq(10, 70, l = 20),
range.val = seq(1, 6, l = 12), nugget.val = seq(0, 10, l = 20),
uni.only = TRUE))
q <- ksline(data.geo, cov.model = "sph",
cov.pars = c(fit2.ml$sigmasq, fit2.ml$phi),
nugget = fit2.ml$nugget, locations = grd)
image(q, val = q$predict)
image(q, val = q$krige.var)
par(mfrow = c(1, 1))
image(q, val = q$predict)
image(q, val = q$krige.var)
###############################################################################
# Primer: Povprečne letne padavine v Sloveniji
pod <- read.table("PADAVINESLO.txt", header = TRUE, sep = "\t")
str(pod)
library(raster)
DEM <- raster("DEM1000.tif")
SLO <- shapefile("SLOmeja.shp")
names(pod)
setwd("~/Documents/GitHub/viri_podatkov/casovni_procesi")
